/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AssessmentQuestionGroupScore {
    /// The ID of the question group
    #[serde(rename = "questionGroupId")]
    pub question_group_id: String,
    /// The total score for the questions
    #[serde(rename = "totalScore", skip_serializing_if = "Option::is_none")]
    pub total_score: Option<f32>,
    /// The maximum total score for the questions
    #[serde(rename = "maxTotalScore", skip_serializing_if = "Option::is_none")]
    pub max_total_score: Option<f32>,
    /// True if this question group is marked NA
    #[serde(rename = "markedNA", skip_serializing_if = "Option::is_none")]
    pub marked_na: Option<bool>,
    /// The total score for the critical questions
    #[serde(rename = "totalCriticalScore", skip_serializing_if = "Option::is_none")]
    pub total_critical_score: Option<f32>,
    /// The maximum total score for the critical questions
    #[serde(rename = "maxTotalCriticalScore", skip_serializing_if = "Option::is_none")]
    pub max_total_critical_score: Option<f32>,
    /// The total score for the non-critical questions
    #[serde(rename = "totalNonCriticalScore", skip_serializing_if = "Option::is_none")]
    pub total_non_critical_score: Option<f32>,
    /// The maximum total score for the non-critical questions
    #[serde(rename = "maxTotalNonCriticalScore", skip_serializing_if = "Option::is_none")]
    pub max_total_non_critical_score: Option<f32>,
    /// The unweighted total score for this question group
    #[serde(rename = "totalScoreUnweighted", skip_serializing_if = "Option::is_none")]
    pub total_score_unweighted: Option<f32>,
    /// The maximum unweighted total score for this question group
    #[serde(rename = "maxTotalScoreUnweighted", skip_serializing_if = "Option::is_none")]
    pub max_total_score_unweighted: Option<f32>,
    /// The unweighted total score for the critical questions
    #[serde(rename = "totalCriticalScoreUnweighted", skip_serializing_if = "Option::is_none")]
    pub total_critical_score_unweighted: Option<f32>,
    /// The maximum unweighted total score for the critical questions
    #[serde(rename = "maxTotalCriticalScoreUnweighted", skip_serializing_if = "Option::is_none")]
    pub max_total_critical_score_unweighted: Option<f32>,
    /// The total unweighted score for the non-critical questions
    #[serde(rename = "totalNonCriticalScoreUnweighted", skip_serializing_if = "Option::is_none")]
    pub total_non_critical_score_unweighted: Option<f32>,
    /// The maximum unweighted total score for the non-critical questions
    #[serde(rename = "maxTotalNonCriticalScoreUnweighted", skip_serializing_if = "Option::is_none")]
    pub max_total_non_critical_score_unweighted: Option<f32>,
    /// The individual question scores
    #[serde(rename = "questionScores", skip_serializing_if = "Option::is_none")]
    pub question_scores: Option<Vec<crate::models::AssessmentQuestionScore>>,
}

impl AssessmentQuestionGroupScore {
    pub fn new(question_group_id: String) -> AssessmentQuestionGroupScore {
        AssessmentQuestionGroupScore {
            question_group_id,
            total_score: None,
            max_total_score: None,
            marked_na: None,
            total_critical_score: None,
            max_total_critical_score: None,
            total_non_critical_score: None,
            max_total_non_critical_score: None,
            total_score_unweighted: None,
            max_total_score_unweighted: None,
            total_critical_score_unweighted: None,
            max_total_critical_score_unweighted: None,
            total_non_critical_score_unweighted: None,
            max_total_non_critical_score_unweighted: None,
            question_scores: None,
        }
    }
}


