/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SmsAddressProvision {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Name associated with this address
    #[serde(rename = "name")]
    pub name: String,
    /// The number and street address where this address is located.
    #[serde(rename = "street")]
    pub street: String,
    /// The city in which this address is in
    #[serde(rename = "city")]
    pub city: String,
    /// The state or region this address is in
    #[serde(rename = "region")]
    pub region: String,
    /// The postal code this address is in
    #[serde(rename = "postalCode")]
    pub postal_code: String,
    /// The ISO country code of this address
    #[serde(rename = "countryCode")]
    pub country_code: String,
    /// This is used when the address is created. If the value is not set or true, then the system will, if necessary, auto-correct the address you provide. Set this value to false if the system should not auto-correct the address.
    #[serde(rename = "autoCorrectAddress", skip_serializing_if = "Option::is_none")]
    pub auto_correct_address: Option<bool>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl SmsAddressProvision {
    pub fn new(name: String, street: String, city: String, region: String, postal_code: String, country_code: String) -> SmsAddressProvision {
        SmsAddressProvision {
            id: None,
            name,
            street,
            city,
            region,
            postal_code,
            country_code,
            auto_correct_address: None,
            self_uri: None,
        }
    }
}


