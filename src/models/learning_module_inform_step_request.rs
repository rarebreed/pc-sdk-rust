/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// LearningModuleInformStepRequest : Learning module inform steps request



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LearningModuleInformStepRequest {
    /// The learning module inform step type
    #[serde(rename = "type")]
    pub _type: Type,
    /// The name of the inform step or content
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The value for inform step
    #[serde(rename = "value")]
    pub value: String,
    /// The sharing uri for Content type inform step
    #[serde(rename = "sharingUri", skip_serializing_if = "Option::is_none")]
    pub sharing_uri: Option<String>,
    /// The document type for Content type Inform step
    #[serde(rename = "contentType", skip_serializing_if = "Option::is_none")]
    pub content_type: Option<String>,
    /// The order of inform step in a learning module
    #[serde(rename = "order")]
    pub order: i32,
}

impl LearningModuleInformStepRequest {
    /// Learning module inform steps request
    pub fn new(_type: Type, value: String, order: i32) -> LearningModuleInformStepRequest {
        LearningModuleInformStepRequest {
            _type,
            name: None,
            value,
            sharing_uri: None,
            content_type: None,
            order,
        }
    }
}

/// The learning module inform step type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Url")]
    Url,
    #[serde(rename = "Content")]
    Content,
    #[serde(rename = "RichText")]
    RichText,
}

impl Default for Type {
    fn default() -> Type {
        Self::Url
    }
}

