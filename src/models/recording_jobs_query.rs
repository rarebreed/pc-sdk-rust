/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RecordingJobsQuery {
    /// Operation to perform bulk task
    #[serde(rename = "action")]
    pub action: Action,
    /// The date when the action will be performed. If the operation will cause the delete date of a recording to be older than the export date, the export date will be adjusted to the delete date. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "actionDate")]
    pub action_date: String,
    /// IntegrationId to Access AWS S3 bucket for bulk recording exports. This field is required and used only for EXPORT action.
    #[serde(rename = "integrationId", skip_serializing_if = "Option::is_none")]
    pub integration_id: Option<String>,
    /// Include Screen recordings for export action, default value = true 
    #[serde(rename = "includeScreenRecordings", skip_serializing_if = "Option::is_none")]
    pub include_screen_recordings: Option<bool>,
    #[serde(rename = "conversationQuery")]
    pub conversation_query: Box<crate::models::AsyncConversationQuery>,
}

impl RecordingJobsQuery {
    pub fn new(action: Action, action_date: String, conversation_query: crate::models::AsyncConversationQuery) -> RecordingJobsQuery {
        RecordingJobsQuery {
            action,
            action_date,
            integration_id: None,
            include_screen_recordings: None,
            conversation_query: Box::new(conversation_query),
        }
    }
}

/// Operation to perform bulk task
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "DELETE")]
    DELETE,
    #[serde(rename = "EXPORT")]
    EXPORT,
}

impl Default for Action {
    fn default() -> Action {
        Self::DELETE
    }
}

