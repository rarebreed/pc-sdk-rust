/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommandStatus {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "expiration", skip_serializing_if = "Option::is_none")]
    pub expiration: Option<String>,
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    #[serde(rename = "statusCode", skip_serializing_if = "Option::is_none")]
    pub status_code: Option<StatusCode>,
    #[serde(rename = "commandType", skip_serializing_if = "Option::is_none")]
    pub command_type: Option<CommandType>,
    #[serde(rename = "document", skip_serializing_if = "Option::is_none")]
    pub document: Option<Box<crate::models::Document>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl CommandStatus {
    pub fn new() -> CommandStatus {
        CommandStatus {
            id: None,
            name: None,
            expiration: None,
            user_id: None,
            status_code: None,
            command_type: None,
            document: None,
            self_uri: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StatusCode {
    #[serde(rename = "INPROGRESS")]
    INPROGRESS,
    #[serde(rename = "COMPLETE")]
    COMPLETE,
    #[serde(rename = "ERROR")]
    ERROR,
    #[serde(rename = "CANCELING")]
    CANCELING,
    #[serde(rename = "CANCELED")]
    CANCELED,
}

impl Default for StatusCode {
    fn default() -> StatusCode {
        Self::INPROGRESS
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CommandType {
    #[serde(rename = "UPLOAD")]
    UPLOAD,
    #[serde(rename = "COPYDOCUMENT")]
    COPYDOCUMENT,
    #[serde(rename = "MOVEDOCUMENT")]
    MOVEDOCUMENT,
    #[serde(rename = "DELETEWORKSPACE")]
    DELETEWORKSPACE,
    #[serde(rename = "DELETEDOCUMENT")]
    DELETEDOCUMENT,
    #[serde(rename = "DELETETAG")]
    DELETETAG,
    #[serde(rename = "UPDATETAG")]
    UPDATETAG,
    #[serde(rename = "REINDEX")]
    REINDEX,
    #[serde(rename = "CLEANUP")]
    CLEANUP,
    #[serde(rename = "REPLACEDOCUMENT")]
    REPLACEDOCUMENT,
}

impl Default for CommandType {
    fn default() -> CommandType {
        Self::UPLOAD
    }
}

