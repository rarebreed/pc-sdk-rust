/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ReschedulingOptionsRunResponse {
    #[serde(rename = "existingSchedule", skip_serializing_if = "Option::is_none")]
    pub existing_schedule: Option<Box<crate::models::BuScheduleReference>>,
    /// The start date of the period to reschedule. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    /// The end date of the period to reschedule. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<String>,
    /// Per-management unit rescheduling options
    #[serde(rename = "managementUnits", skip_serializing_if = "Option::is_none")]
    pub management_units: Option<Vec<crate::models::ReschedulingManagementUnitResponse>>,
    /// The number of agents to be considered in the reschedule
    #[serde(rename = "agentCount", skip_serializing_if = "Option::is_none")]
    pub agent_count: Option<i32>,
    /// The IDs of the activity codes being considered for reschedule
    #[serde(rename = "activityCodeIds", skip_serializing_if = "Option::is_none")]
    pub activity_code_ids: Option<Vec<String>>,
    /// Whether weekly paid time is allowed to be changed
    #[serde(rename = "doNotChangeWeeklyPaidTime", skip_serializing_if = "Option::is_none")]
    pub do_not_change_weekly_paid_time: Option<bool>,
    /// Whether daily paid time is allowed to be changed
    #[serde(rename = "doNotChangeDailyPaidTime", skip_serializing_if = "Option::is_none")]
    pub do_not_change_daily_paid_time: Option<bool>,
    /// Whether shift start times are allowed to be changed
    #[serde(rename = "doNotChangeShiftStartTimes", skip_serializing_if = "Option::is_none")]
    pub do_not_change_shift_start_times: Option<bool>,
    /// Whether manually edited shifts are allowed to be changed
    #[serde(rename = "doNotChangeManuallyEditedShifts", skip_serializing_if = "Option::is_none")]
    pub do_not_change_manually_edited_shifts: Option<bool>,
}

impl ReschedulingOptionsRunResponse {
    pub fn new() -> ReschedulingOptionsRunResponse {
        ReschedulingOptionsRunResponse {
            existing_schedule: None,
            start_date: None,
            end_date: None,
            management_units: None,
            agent_count: None,
            activity_code_ids: None,
            do_not_change_weekly_paid_time: None,
            do_not_change_daily_paid_time: None,
            do_not_change_shift_start_times: None,
            do_not_change_manually_edited_shifts: None,
        }
    }
}


