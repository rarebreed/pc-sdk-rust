/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GroupContact {
    /// Phone number for this contact type
    #[serde(rename = "address")]
    pub address: String,
    /// Extension is set if the number is e164 valid
    #[serde(rename = "extension", skip_serializing_if = "Option::is_none")]
    pub extension: Option<String>,
    /// Formatted version of the address property
    #[serde(rename = "display", skip_serializing_if = "Option::is_none")]
    pub display: Option<String>,
    /// Contact type of the address
    #[serde(rename = "type")]
    pub _type: Type,
    /// Media type of the address
    #[serde(rename = "mediaType")]
    pub media_type: MediaType,
}

impl GroupContact {
    pub fn new(address: String, _type: Type, media_type: MediaType) -> GroupContact {
        GroupContact {
            address,
            extension: None,
            display: None,
            _type,
            media_type,
        }
    }
}

/// Contact type of the address
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "GROUPRING")]
    GROUPRING,
    #[serde(rename = "GROUPPHONE")]
    GROUPPHONE,
}

impl Default for Type {
    fn default() -> Type {
        Self::GROUPRING
    }
}
/// Media type of the address
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MediaType {
    #[serde(rename = "PHONE")]
    PHONE,
}

impl Default for MediaType {
    fn default() -> MediaType {
        Self::PHONE
    }
}

