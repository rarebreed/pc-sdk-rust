/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ScimServiceProviderConfigAuthenticationScheme : Defines an authentication scheme in the SCIM service provider's configuration.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScimServiceProviderConfigAuthenticationScheme {
    /// The name of the authentication scheme, for example, HTTP Basic.
    #[serde(rename = "name")]
    pub name: String,
    /// The description of the authentication scheme.
    #[serde(rename = "description")]
    pub description: String,
    /// The HTTP-addressable URL that points to the authentication scheme's specification.
    #[serde(rename = "specUri", skip_serializing_if = "Option::is_none")]
    pub spec_uri: Option<String>,
    /// The HTTP-addressable URL that points to the authentication scheme's usage documentation.
    #[serde(rename = "documentationUri", skip_serializing_if = "Option::is_none")]
    pub documentation_uri: Option<String>,
    /// The type of authentication scheme.
    #[serde(rename = "type")]
    pub _type: Type,
    /// Indicates whether this authentication scheme is the primary method of authentication.
    #[serde(rename = "primary", skip_serializing_if = "Option::is_none")]
    pub primary: Option<bool>,
}

impl ScimServiceProviderConfigAuthenticationScheme {
    /// Defines an authentication scheme in the SCIM service provider's configuration.
    pub fn new(name: String, description: String, _type: Type) -> ScimServiceProviderConfigAuthenticationScheme {
        ScimServiceProviderConfigAuthenticationScheme {
            name,
            description,
            spec_uri: None,
            documentation_uri: None,
            _type,
            primary: None,
        }
    }
}

/// The type of authentication scheme.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "oauth")]
    Oauth,
    #[serde(rename = "oauth2")]
    Oauth2,
    #[serde(rename = "oauthbearertoken")]
    Oauthbearertoken,
    #[serde(rename = "httpbasic")]
    Httpbasic,
    #[serde(rename = "httpdigest")]
    Httpdigest,
}

impl Default for Type {
    fn default() -> Type {
        Self::Oauth
    }
}

