/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DomainOrganizationRoleCreate {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The role name
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "defaultRoleId", skip_serializing_if = "Option::is_none")]
    pub default_role_id: Option<String>,
    #[serde(rename = "permissions", skip_serializing_if = "Option::is_none")]
    pub permissions: Option<Vec<String>>,
    /// A collection of the permissions the role is not using
    #[serde(rename = "unusedPermissions", skip_serializing_if = "Option::is_none")]
    pub unused_permissions: Option<Vec<String>>,
    #[serde(rename = "permissionPolicies", skip_serializing_if = "Option::is_none")]
    pub permission_policies: Option<Vec<crate::models::DomainPermissionPolicy>>,
    #[serde(rename = "userCount", skip_serializing_if = "Option::is_none")]
    pub user_count: Option<i32>,
    /// Optional unless patch operation.
    #[serde(rename = "roleNeedsUpdate", skip_serializing_if = "Option::is_none")]
    pub role_needs_update: Option<bool>,
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<bool>,
    #[serde(rename = "base", skip_serializing_if = "Option::is_none")]
    pub base: Option<bool>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl DomainOrganizationRoleCreate {
    pub fn new(name: String) -> DomainOrganizationRoleCreate {
        DomainOrganizationRoleCreate {
            id: None,
            name,
            description: None,
            default_role_id: None,
            permissions: None,
            unused_permissions: None,
            permission_policies: None,
            user_count: None,
            role_needs_update: None,
            default: None,
            base: None,
            self_uri: None,
        }
    }
}


