/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Relationship {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "user")]
    pub user: Box<crate::models::User>,
    #[serde(rename = "externalOrganization")]
    pub external_organization: Box<crate::models::ExternalOrganization>,
    /// The relationship or role of the user to this external organization.Examples: Account Manager, Sales Engineer, Implementation Consultant
    #[serde(rename = "relationship")]
    pub relationship: String,
    /// Links to the sources of data (e.g. one source might be a CRM) that contributed data to this record.  Read-only, and only populated when requested via expand param.
    #[serde(rename = "externalDataSources", skip_serializing_if = "Option::is_none")]
    pub external_data_sources: Option<Vec<crate::models::ExternalDataSource>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl Relationship {
    pub fn new(user: crate::models::User, external_organization: crate::models::ExternalOrganization, relationship: String) -> Relationship {
        Relationship {
            id: None,
            user: Box::new(user),
            external_organization: Box::new(external_organization),
            relationship,
            external_data_sources: None,
            self_uri: None,
        }
    }
}


