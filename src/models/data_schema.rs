/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DataSchema {
    /// The globally unique identifier for the schema.  Only required if a schema is used for custom fields during external entity creation or updates.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The schema's version, a positive integer. Required for updates.
    #[serde(rename = "version")]
    pub version: i32,
    /// One of \"CONTACT\" or \"EXTERNAL_ORGANIZATION\".  Indicates the built-in entity type to which this schema applies.
    #[serde(rename = "appliesTo", skip_serializing_if = "Option::is_none")]
    pub applies_to: Option<Vec<AppliesTo>>,
    /// The schema's enabled/disabled status. A disabled schema cannot be assigned to any other entities, but the data on those entities from the schema still exists.
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    #[serde(rename = "createdBy", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Box<crate::models::DomainEntityRef>>,
    /// The date and time this schema was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    #[serde(rename = "jsonSchema")]
    pub json_schema: Box<crate::models::JsonSchemaDocument>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl DataSchema {
    pub fn new(version: i32, json_schema: crate::models::JsonSchemaDocument) -> DataSchema {
        DataSchema {
            id: None,
            name: None,
            version,
            applies_to: None,
            enabled: None,
            created_by: None,
            date_created: None,
            json_schema: Box::new(json_schema),
            self_uri: None,
        }
    }
}

/// One of \"CONTACT\" or \"EXTERNAL_ORGANIZATION\".  Indicates the built-in entity type to which this schema applies.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AppliesTo {
    #[serde(rename = "CONTACT")]
    CONTACT,
    #[serde(rename = "EXTERNAL_ORGANIZATION")]
    EXTERNALORGANIZATION,
    #[serde(rename = "OPEN_ACTION")]
    OPENACTION,
}

impl Default for AppliesTo {
    fn default() -> AppliesTo {
        Self::CONTACT
    }
}

