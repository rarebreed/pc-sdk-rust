/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ShiftTradeActivityPreviewResponse {
    /// The start date and time of this activity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<String>,
    /// The length in minutes of this activity
    #[serde(rename = "lengthMinutes", skip_serializing_if = "Option::is_none")]
    pub length_minutes: Option<i32>,
    /// The ID of the activity code for this activity
    #[serde(rename = "activityCodeId", skip_serializing_if = "Option::is_none")]
    pub activity_code_id: Option<String>,
    /// Whether this activity counts as paid time
    #[serde(rename = "countsAsPaidTime", skip_serializing_if = "Option::is_none")]
    pub counts_as_paid_time: Option<bool>,
}

impl ShiftTradeActivityPreviewResponse {
    pub fn new() -> ShiftTradeActivityPreviewResponse {
        ShiftTradeActivityPreviewResponse {
            start_date: None,
            length_minutes: None,
            activity_code_id: None,
            counts_as_paid_time: None,
        }
    }
}


