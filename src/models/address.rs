/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Address {
    /// This will be nameRaw if present, or a locality lookup of the address field otherwise.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The name as close to the bits on the wire as possible.
    #[serde(rename = "nameRaw", skip_serializing_if = "Option::is_none")]
    pub name_raw: Option<String>,
    /// The normalized address. This field is acquired from the Address Normalization Table.  The addressRaw could have gone through some transformations, such as only using the numeric portion, before being run through the Address Normalization Table.
    #[serde(rename = "addressNormalized", skip_serializing_if = "Option::is_none")]
    pub address_normalized: Option<String>,
    /// The address as close to the bits on the wire as possible.
    #[serde(rename = "addressRaw", skip_serializing_if = "Option::is_none")]
    pub address_raw: Option<String>,
    /// The displayable address. This field is acquired from the Address Normalization Table.  The addressRaw could have gone through some transformations, such as only using the numeric portion, before being run through the Address Normalization Table.
    #[serde(rename = "addressDisplayable", skip_serializing_if = "Option::is_none")]
    pub address_displayable: Option<String>,
}

impl Address {
    pub fn new() -> Address {
        Address {
            name: None,
            name_raw: None,
            address_normalized: None,
            address_raw: None,
            address_displayable: None,
        }
    }
}


