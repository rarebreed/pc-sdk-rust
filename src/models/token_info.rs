/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TokenInfo {
    #[serde(rename = "organization", skip_serializing_if = "Option::is_none")]
    pub organization: Option<Box<crate::models::NamedEntity>>,
    #[serde(rename = "homeOrganization", skip_serializing_if = "Option::is_none")]
    pub home_organization: Option<Box<crate::models::NamedEntity>>,
    /// The list of scopes authorized for the OAuth client
    #[serde(rename = "authorizedScope", skip_serializing_if = "Option::is_none")]
    pub authorized_scope: Option<Vec<String>>,
    #[serde(rename = "clonedUser", skip_serializing_if = "Option::is_none")]
    pub cloned_user: Option<Box<crate::models::TokenInfoClonedUser>>,
    #[serde(rename = "OAuthClient", skip_serializing_if = "Option::is_none")]
    pub o_auth_client: Option<Box<crate::models::OrgOAuthClient>>,
}

impl TokenInfo {
    pub fn new() -> TokenInfo {
        TokenInfo {
            organization: None,
            home_organization: None,
            authorized_scope: None,
            cloned_user: None,
            o_auth_client: None,
        }
    }
}


