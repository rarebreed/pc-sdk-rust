/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PhoneStatus {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The Operational Status of this phone
    #[serde(rename = "operationalStatus", skip_serializing_if = "Option::is_none")]
    pub operational_status: Option<OperationalStatus>,
    /// The status of the primary or secondary Edges assigned to the phone lines.
    #[serde(rename = "edgesStatus", skip_serializing_if = "Option::is_none")]
    pub edges_status: Option<EdgesStatus>,
    /// Event Creation Time represents an ISO-8601 string. For example: UTC, UTC+01:00, or Europe/London
    #[serde(rename = "eventCreationTime", skip_serializing_if = "Option::is_none")]
    pub event_creation_time: Option<String>,
    #[serde(rename = "provision", skip_serializing_if = "Option::is_none")]
    pub provision: Option<Box<crate::models::ProvisionInfo>>,
    /// A list of LineStatus information for each of the lines of this phone
    #[serde(rename = "lineStatuses", skip_serializing_if = "Option::is_none")]
    pub line_statuses: Option<Vec<crate::models::LineStatus>>,
    /// The phone status's edge assignment type.
    #[serde(rename = "phoneAssignmentToEdgeType", skip_serializing_if = "Option::is_none")]
    pub phone_assignment_to_edge_type: Option<PhoneAssignmentToEdgeType>,
    #[serde(rename = "edge", skip_serializing_if = "Option::is_none")]
    pub edge: Option<Box<crate::models::DomainEntityRef>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl PhoneStatus {
    pub fn new() -> PhoneStatus {
        PhoneStatus {
            id: None,
            name: None,
            operational_status: None,
            edges_status: None,
            event_creation_time: None,
            provision: None,
            line_statuses: None,
            phone_assignment_to_edge_type: None,
            edge: None,
            self_uri: None,
        }
    }
}

/// The Operational Status of this phone
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OperationalStatus {
    #[serde(rename = "OPERATIONAL")]
    OPERATIONAL,
    #[serde(rename = "DEGRADED")]
    DEGRADED,
    #[serde(rename = "OFFLINE")]
    OFFLINE,
    #[serde(rename = "UNKNOWN")]
    UNKNOWN,
}

impl Default for OperationalStatus {
    fn default() -> OperationalStatus {
        Self::OPERATIONAL
    }
}
/// The status of the primary or secondary Edges assigned to the phone lines.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EdgesStatus {
    #[serde(rename = "IN_SERVICE")]
    INSERVICE,
    #[serde(rename = "MIXED_SERVICE")]
    MIXEDSERVICE,
    #[serde(rename = "OUT_OF_SERVICE")]
    OUTOFSERVICE,
    #[serde(rename = "NO_EDGES")]
    NOEDGES,
}

impl Default for EdgesStatus {
    fn default() -> EdgesStatus {
        Self::INSERVICE
    }
}
/// The phone status's edge assignment type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PhoneAssignmentToEdgeType {
    #[serde(rename = "PRIMARY")]
    PRIMARY,
    #[serde(rename = "SECONDARY")]
    SECONDARY,
}

impl Default for PhoneAssignmentToEdgeType {
    fn default() -> PhoneAssignmentToEdgeType {
        Self::PRIMARY
    }
}

