/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AnalyticsResolution {
    /// Specifies when an event occurred. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "eventTime", skip_serializing_if = "Option::is_none")]
    pub event_time: Option<String>,
    /// The ID of the last queue on which the conversation was handled.
    #[serde(rename = "queueId", skip_serializing_if = "Option::is_none")]
    pub queue_id: Option<String>,
    /// The ID of the last user who handled the conversation.
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    #[serde(rename = "nNextContactAvoided", skip_serializing_if = "Option::is_none")]
    pub n_next_contact_avoided: Option<i64>,
}

impl AnalyticsResolution {
    pub fn new() -> AnalyticsResolution {
        AnalyticsResolution {
            event_time: None,
            queue_id: None,
            user_id: None,
            n_next_contact_avoided: None,
        }
    }
}


