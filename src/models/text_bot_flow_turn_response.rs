/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// TextBotFlowTurnResponse : Information related to a success bot flow turn request.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TextBotFlowTurnResponse {
    /// The ID of the bot flow turn. If additional turns are needed, supply this ID as the previous turn in your next turn request.
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "previousTurn", skip_serializing_if = "Option::is_none")]
    pub previous_turn: Option<Box<crate::models::TextBotTurnReference>>,
    #[serde(rename = "prompts", skip_serializing_if = "Option::is_none")]
    pub prompts: Option<Box<crate::models::TextBotOutputPrompts>>,
    /// Indicates the suggested next action. If appropriate, the matching output event object includes additional information.
    #[serde(rename = "nextActionType")]
    pub next_action_type: NextActionType,
    #[serde(rename = "nextActionDisconnect", skip_serializing_if = "Option::is_none")]
    pub next_action_disconnect: Option<Box<crate::models::TextBotDisconnectAction>>,
    #[serde(rename = "nextActionWaitForInput", skip_serializing_if = "Option::is_none")]
    pub next_action_wait_for_input: Option<Box<crate::models::TextBotWaitForInputAction>>,
    #[serde(rename = "nextActionExit", skip_serializing_if = "Option::is_none")]
    pub next_action_exit: Option<Box<crate::models::TextBotExitAction>>,
}

impl TextBotFlowTurnResponse {
    /// Information related to a success bot flow turn request.
    pub fn new(id: String, next_action_type: NextActionType) -> TextBotFlowTurnResponse {
        TextBotFlowTurnResponse {
            id,
            previous_turn: None,
            prompts: None,
            next_action_type,
            next_action_disconnect: None,
            next_action_wait_for_input: None,
            next_action_exit: None,
        }
    }
}

/// Indicates the suggested next action. If appropriate, the matching output event object includes additional information.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum NextActionType {
    #[serde(rename = "NoOp")]
    NoOp,
    #[serde(rename = "Disconnect")]
    Disconnect,
    #[serde(rename = "WaitForInput")]
    WaitForInput,
    #[serde(rename = "Exit")]
    Exit,
}

impl Default for NextActionType {
    fn default() -> NextActionType {
        Self::NoOp
    }
}

