/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Organization {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The default language for this organization. Example: 'en'
    #[serde(rename = "defaultLanguage", skip_serializing_if = "Option::is_none")]
    pub default_language: Option<String>,
    /// The default country code for this organization. Example: 'US'
    #[serde(rename = "defaultCountryCode", skip_serializing_if = "Option::is_none")]
    pub default_country_code: Option<String>,
    /// The short name for the organization. This field is globally unique and cannot be changed.
    #[serde(rename = "thirdPartyOrgName", skip_serializing_if = "Option::is_none")]
    pub third_party_org_name: Option<String>,
    #[serde(rename = "thirdPartyURI", skip_serializing_if = "Option::is_none")]
    pub third_party_uri: Option<String>,
    #[serde(rename = "domain", skip_serializing_if = "Option::is_none")]
    pub domain: Option<String>,
    /// The current version of the organization.
    #[serde(rename = "version")]
    pub version: i32,
    /// The current state. Examples are active, inactive, deleted.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<State>,
    #[serde(rename = "defaultSiteId", skip_serializing_if = "Option::is_none")]
    pub default_site_id: Option<String>,
    /// Email address where support tickets are sent to.
    #[serde(rename = "supportURI", skip_serializing_if = "Option::is_none")]
    pub support_uri: Option<String>,
    #[serde(rename = "voicemailEnabled", skip_serializing_if = "Option::is_none")]
    pub voicemail_enabled: Option<bool>,
    /// Organizations Originating Platform.
    #[serde(rename = "productPlatform", skip_serializing_if = "Option::is_none")]
    pub product_platform: Option<ProductPlatform>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
    /// The state of features available for the organization.
    #[serde(rename = "features", skip_serializing_if = "Option::is_none")]
    pub features: Option<::std::collections::HashMap<String, bool>>,
}

impl Organization {
    pub fn new(version: i32) -> Organization {
        Organization {
            id: None,
            name: None,
            default_language: None,
            default_country_code: None,
            third_party_org_name: None,
            third_party_uri: None,
            domain: None,
            version,
            state: None,
            default_site_id: None,
            support_uri: None,
            voicemail_enabled: None,
            product_platform: None,
            self_uri: None,
            features: None,
        }
    }
}

/// The current state. Examples are active, inactive, deleted.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "deleted")]
    Deleted,
}

impl Default for State {
    fn default() -> State {
        Self::Active
    }
}
/// Organizations Originating Platform.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ProductPlatform {
    #[serde(rename = "GenesysCloud")]
    GenesysCloud,
    #[serde(rename = "PureCloud")]
    PureCloud,
    #[serde(rename = "PureEngage")]
    PureEngage,
    #[serde(rename = "PureEngageCloud")]
    PureEngageCloud,
    #[serde(rename = "PureConnect")]
    PureConnect,
    #[serde(rename = "PureConnectCloud")]
    PureConnectCloud,
    #[serde(rename = "Unknown")]
    Unknown,
}

impl Default for ProductPlatform {
    fn default() -> ProductPlatform {
        Self::GenesysCloud
    }
}

