/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct JourneyPattern {
    /// A list of one or more criteria to satisfy.
    #[serde(rename = "criteria")]
    pub criteria: Vec<crate::models::Criteria>,
    /// The number of times the pattern must match.
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    /// The stream type for which this pattern can be matched on.
    #[serde(rename = "streamType")]
    pub stream_type: StreamType,
    /// The session type for which this pattern can be matched on.
    #[serde(rename = "sessionType")]
    pub session_type: String,
    /// The name of the event for which this pattern can be matched on.
    #[serde(rename = "eventName", skip_serializing_if = "Option::is_none")]
    pub event_name: Option<String>,
}

impl JourneyPattern {
    pub fn new(criteria: Vec<crate::models::Criteria>, stream_type: StreamType, session_type: String) -> JourneyPattern {
        JourneyPattern {
            criteria,
            count: None,
            stream_type,
            session_type,
            event_name: None,
        }
    }
}

/// The stream type for which this pattern can be matched on.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StreamType {
    #[serde(rename = "Web")]
    Web,
    #[serde(rename = "Custom")]
    Custom,
    #[serde(rename = "Conversation")]
    Conversation,
}

impl Default for StreamType {
    fn default() -> StreamType {
        Self::Web
    }
}

