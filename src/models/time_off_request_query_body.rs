/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TimeOffRequestQueryBody {
    /// The set of user ids to filter time off requests
    #[serde(rename = "userIds", skip_serializing_if = "Option::is_none")]
    pub user_ids: Option<Vec<String>>,
    /// The set of statuses to filter time off requests
    #[serde(rename = "statuses", skip_serializing_if = "Option::is_none")]
    pub statuses: Option<std::collections::HashSet<Statuses>>,
    #[serde(rename = "dateRange", skip_serializing_if = "Option::is_none")]
    pub date_range: Option<Box<crate::models::DateRange>>,
}

impl TimeOffRequestQueryBody {
    pub fn new() -> TimeOffRequestQueryBody {
        TimeOffRequestQueryBody {
            user_ids: None,
            statuses: None,
            date_range: None,
        }
    }
}

/// The set of statuses to filter time off requests
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Statuses {
    #[serde(rename = "PENDING")]
    PENDING,
}

impl Default for Statuses {
    fn default() -> Statuses {
        Self::PENDING
    }
}

