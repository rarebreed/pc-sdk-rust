/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct KeyRotationSchedule {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Value to set schedule to
    #[serde(rename = "period")]
    pub period: Period,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl KeyRotationSchedule {
    pub fn new(period: Period) -> KeyRotationSchedule {
        KeyRotationSchedule {
            id: None,
            name: None,
            period,
            self_uri: None,
        }
    }
}

/// Value to set schedule to
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Period {
    #[serde(rename = "DISABLED")]
    DISABLED,
    #[serde(rename = "DAILY")]
    DAILY,
    #[serde(rename = "WEEKLY")]
    WEEKLY,
    #[serde(rename = "MONTHLY")]
    MONTHLY,
    #[serde(rename = "YEARLY")]
    YEARLY,
}

impl Default for Period {
    fn default() -> Period {
        Self::DISABLED
    }
}

