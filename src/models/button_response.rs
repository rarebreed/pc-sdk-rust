/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ButtonResponse {
    /// Button response type that captures Button and QuickReply type responses
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// Text to show inside the Button reply. This is also used as the response text after clicking on the Button.
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
    /// Content of the textback payload after clicking a button
    #[serde(rename = "payload", skip_serializing_if = "Option::is_none")]
    pub payload: Option<String>,
    /// Button response message type that captures QuickReply , Cards and Carousel .This is used  as label for Card selection
    #[serde(rename = "messageType", skip_serializing_if = "Option::is_none")]
    pub message_type: Option<MessageType>,
}

impl ButtonResponse {
    pub fn new() -> ButtonResponse {
        ButtonResponse {
            _type: None,
            text: None,
            payload: None,
            message_type: None,
        }
    }
}

/// Button response type that captures Button and QuickReply type responses
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Button")]
    Button,
    #[serde(rename = "QuickReply")]
    QuickReply,
}

impl Default for Type {
    fn default() -> Type {
        Self::Button
    }
}
/// Button response message type that captures QuickReply , Cards and Carousel .This is used  as label for Card selection
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MessageType {
    #[serde(rename = "QuickReply")]
    QuickReply,
    #[serde(rename = "Card")]
    Card,
    #[serde(rename = "Carousel")]
    Carousel,
}

impl Default for MessageType {
    fn default() -> MessageType {
        Self::QuickReply
    }
}

