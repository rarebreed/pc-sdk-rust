/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WorkdayValuesMetricItem {
    #[serde(rename = "metric", skip_serializing_if = "Option::is_none")]
    pub metric: Option<Box<crate::models::AddressableEntityRef>>,
    #[serde(rename = "metricDefinition", skip_serializing_if = "Option::is_none")]
    pub metric_definition: Option<Box<crate::models::DomainEntityRef>>,
    /// The average value of the metric
    #[serde(rename = "average", skip_serializing_if = "Option::is_none")]
    pub average: Option<f64>,
    /// The unit type of the metric value
    #[serde(rename = "unitType", skip_serializing_if = "Option::is_none")]
    pub unit_type: Option<UnitType>,
    /// The metric value trend
    #[serde(rename = "trend", skip_serializing_if = "Option::is_none")]
    pub trend: Option<Vec<crate::models::WorkdayValuesTrendItem>>,
}

impl WorkdayValuesMetricItem {
    pub fn new() -> WorkdayValuesMetricItem {
        WorkdayValuesMetricItem {
            metric: None,
            metric_definition: None,
            average: None,
            unit_type: None,
            trend: None,
        }
    }
}

/// The unit type of the metric value
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UnitType {
    #[serde(rename = "None")]
    None,
    #[serde(rename = "Percent")]
    Percent,
    #[serde(rename = "Currency")]
    Currency,
    #[serde(rename = "Seconds")]
    Seconds,
    #[serde(rename = "Number")]
    Number,
    #[serde(rename = "AttendanceStatus")]
    AttendanceStatus,
    #[serde(rename = "Unit")]
    Unit,
}

impl Default for UnitType {
    fn default() -> UnitType {
        Self::None
    }
}

