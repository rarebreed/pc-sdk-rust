/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ConversationContentStory : Story object.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConversationContentStory {
    /// Type of ephemeral story attachment.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// URL to the ephemeral story.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// ID of the ephemeral story being replied to.
    #[serde(rename = "replyToId", skip_serializing_if = "Option::is_none")]
    pub reply_to_id: Option<String>,
}

impl ConversationContentStory {
    /// Story object.
    pub fn new() -> ConversationContentStory {
        ConversationContentStory {
            _type: None,
            url: None,
            reply_to_id: None,
        }
    }
}

/// Type of ephemeral story attachment.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Mention")]
    Mention,
    #[serde(rename = "Reply")]
    Reply,
}

impl Default for Type {
    fn default() -> Type {
        Self::Mention
    }
}

