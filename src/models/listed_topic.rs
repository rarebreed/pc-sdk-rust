/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ListedTopic {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "published", skip_serializing_if = "Option::is_none")]
    pub published: Option<bool>,
    #[serde(rename = "strictness", skip_serializing_if = "Option::is_none")]
    pub strictness: Option<Strictness>,
    #[serde(rename = "programsCount", skip_serializing_if = "Option::is_none")]
    pub programs_count: Option<i32>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "dialect", skip_serializing_if = "Option::is_none")]
    pub dialect: Option<String>,
    #[serde(rename = "participants", skip_serializing_if = "Option::is_none")]
    pub participants: Option<Participants>,
    #[serde(rename = "phrasesCount", skip_serializing_if = "Option::is_none")]
    pub phrases_count: Option<i32>,
    #[serde(rename = "modifiedBy", skip_serializing_if = "Option::is_none")]
    pub modified_by: Option<Box<crate::models::AddressableEntityRef>>,
    /// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl ListedTopic {
    pub fn new() -> ListedTopic {
        ListedTopic {
            id: None,
            name: None,
            description: None,
            published: None,
            strictness: None,
            programs_count: None,
            tags: None,
            dialect: None,
            participants: None,
            phrases_count: None,
            modified_by: None,
            date_modified: None,
            self_uri: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Strictness {
    #[serde(rename = "1")]
    _1,
    #[serde(rename = "55")]
    _55,
    #[serde(rename = "65")]
    _65,
    #[serde(rename = "72")]
    _72,
    #[serde(rename = "85")]
    _85,
    #[serde(rename = "90")]
    _90,
}

impl Default for Strictness {
    fn default() -> Strictness {
        Self::_1
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Participants {
    #[serde(rename = "External")]
    External,
    #[serde(rename = "Internal")]
    Internal,
    #[serde(rename = "All")]
    All,
}

impl Default for Participants {
    fn default() -> Participants {
        Self::External
    }
}

