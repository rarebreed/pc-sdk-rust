/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ShiftTradeMatchViolation {
    /// The type of constraint violation
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// Clarifying user params for constructing helpful error messages
    #[serde(rename = "params", skip_serializing_if = "Option::is_none")]
    pub params: Option<::std::collections::HashMap<String, String>>,
}

impl ShiftTradeMatchViolation {
    pub fn new() -> ShiftTradeMatchViolation {
        ShiftTradeMatchViolation {
            _type: None,
            params: None,
        }
    }
}

/// The type of constraint violation
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "AgentCapabilityMismatch")]
    AgentCapabilityMismatch,
    #[serde(rename = "CannotTradeWithYourself")]
    CannotTradeWithYourself,
    #[serde(rename = "DirectTradeForOtherUser")]
    DirectTradeForOtherUser,
    #[serde(rename = "InitiatingAgentScheduleDoesNotExist")]
    InitiatingAgentScheduleDoesNotExist,
    #[serde(rename = "InitiatingShiftDisallowedActivityCategory")]
    InitiatingShiftDisallowedActivityCategory,
    #[serde(rename = "InitiatingShiftDoesNotExist")]
    InitiatingShiftDoesNotExist,
    #[serde(rename = "InitiatingShiftHasExternalActivities")]
    InitiatingShiftHasExternalActivities,
    #[serde(rename = "InitiatingShiftOverlapsExisting")]
    InitiatingShiftOverlapsExisting,
    #[serde(rename = "InitiatingShiftStartTooClose")]
    InitiatingShiftStartTooClose,
    #[serde(rename = "InitiatingShiftTimesChanged")]
    InitiatingShiftTimesChanged,
    #[serde(rename = "InitiatingWeeklyMaxPaidTime")]
    InitiatingWeeklyMaxPaidTime,
    #[serde(rename = "InitiatingWeeklyMinPaidTime")]
    InitiatingWeeklyMinPaidTime,
    #[serde(rename = "InvalidState")]
    InvalidState,
    #[serde(rename = "OneSidedTradeCreation")]
    OneSidedTradeCreation,
    #[serde(rename = "ReceivingAgentScheduleDoesNotExist")]
    ReceivingAgentScheduleDoesNotExist,
    #[serde(rename = "ReceivingShiftDisallowedActivityCategory")]
    ReceivingShiftDisallowedActivityCategory,
    #[serde(rename = "ReceivingShiftDoesNotExist")]
    ReceivingShiftDoesNotExist,
    #[serde(rename = "ReceivingShiftForOneSidedTrade")]
    ReceivingShiftForOneSidedTrade,
    #[serde(rename = "ReceivingShiftHasExternalActivities")]
    ReceivingShiftHasExternalActivities,
    #[serde(rename = "ReceivingShiftMissingForTwoSidedTrade")]
    ReceivingShiftMissingForTwoSidedTrade,
    #[serde(rename = "ReceivingShiftOutsideAcceptableIntervals")]
    ReceivingShiftOutsideAcceptableIntervals,
    #[serde(rename = "ReceivingShiftOverlapsExisting")]
    ReceivingShiftOverlapsExisting,
    #[serde(rename = "ReceivingShiftStartTooClose")]
    ReceivingShiftStartTooClose,
    #[serde(rename = "ReceivingShiftTimesChanged")]
    ReceivingShiftTimesChanged,
    #[serde(rename = "ReceivingWeeklyMaxPaidTime")]
    ReceivingWeeklyMaxPaidTime,
    #[serde(rename = "ReceivingWeeklyMinPaidTime")]
    ReceivingWeeklyMinPaidTime,
    #[serde(rename = "ShiftTradingNotEnabled")]
    ShiftTradingNotEnabled,
    #[serde(rename = "UnequalPaidTime")]
    UnequalPaidTime,
    #[serde(rename = "WeekScheduleDifferent")]
    WeekScheduleDifferent,
    #[serde(rename = "WeekScheduleDoesNotExist")]
    WeekScheduleDoesNotExist,
    #[serde(rename = "WeekScheduleUnpublished")]
    WeekScheduleUnpublished,
}

impl Default for Type {
    fn default() -> Type {
        Self::AgentCapabilityMismatch
    }
}

