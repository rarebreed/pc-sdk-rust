/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// WebDeployment : Details about a Web Deployment



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebDeployment {
    /// The deployment ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The deployment name
    #[serde(rename = "name")]
    pub name: String,
    /// The description of the config
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "configuration")]
    pub configuration: Box<crate::models::WebDeploymentConfigurationVersionEntityRef>,
    /// Property indicates whether all domains are allowed or not. allowedDomains must be empty when this is set as true.
    #[serde(rename = "allowAllDomains", skip_serializing_if = "Option::is_none")]
    pub allow_all_domains: Option<bool>,
    /// The list of domains that are approved to use this deployment; the list will be added to CORS headers for ease of web use.
    #[serde(rename = "allowedDomains", skip_serializing_if = "Option::is_none")]
    pub allowed_domains: Option<Vec<String>>,
    /// Javascript snippet used to load the config
    #[serde(rename = "snippet", skip_serializing_if = "Option::is_none")]
    pub snippet: Option<String>,
    /// The date the deployment was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The date the deployment was most recently modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    #[serde(rename = "lastModifiedUser", skip_serializing_if = "Option::is_none")]
    pub last_modified_user: Option<Box<crate::models::AddressableEntityRef>>,
    #[serde(rename = "flow", skip_serializing_if = "Option::is_none")]
    pub flow: Option<Box<crate::models::DomainEntityRef>>,
    /// The current status of the deployment
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl WebDeployment {
    /// Details about a Web Deployment
    pub fn new(name: String, configuration: crate::models::WebDeploymentConfigurationVersionEntityRef) -> WebDeployment {
        WebDeployment {
            id: None,
            name,
            description: None,
            configuration: Box::new(configuration),
            allow_all_domains: None,
            allowed_domains: None,
            snippet: None,
            date_created: None,
            date_modified: None,
            last_modified_user: None,
            flow: None,
            status: None,
            self_uri: None,
        }
    }
}

/// The current status of the deployment
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "Pending")]
    Pending,
    #[serde(rename = "Active")]
    Active,
    #[serde(rename = "Inactive")]
    Inactive,
    #[serde(rename = "Error")]
    Error,
    #[serde(rename = "Deleting")]
    Deleting,
}

impl Default for Status {
    fn default() -> Status {
        Self::Pending
    }
}

