/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UserStation {
    /// A globally unique identifier for this station
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "associatedUser", skip_serializing_if = "Option::is_none")]
    pub associated_user: Option<Box<crate::models::User>>,
    /// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "associatedDate", skip_serializing_if = "Option::is_none")]
    pub associated_date: Option<String>,
    #[serde(rename = "defaultUser", skip_serializing_if = "Option::is_none")]
    pub default_user: Option<Box<crate::models::User>>,
    /// Provider-specific info for this station, e.g. { \"edgeGroupId\": \"ffe7b15c-a9cc-4f4c-88f5-781327819a49\" }
    #[serde(rename = "providerInfo", skip_serializing_if = "Option::is_none")]
    pub provider_info: Option<::std::collections::HashMap<String, String>>,
}

impl UserStation {
    pub fn new() -> UserStation {
        UserStation {
            id: None,
            name: None,
            _type: None,
            associated_user: None,
            associated_date: None,
            default_user: None,
            provider_info: None,
        }
    }
}


