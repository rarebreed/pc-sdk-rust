/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AdminTimeOffRequestPatch {
    /// The status of this time off request
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// The ID of the activity code associated with this time off request. Activity code must be of the TimeOff category
    #[serde(rename = "activityCodeId", skip_serializing_if = "Option::is_none")]
    pub activity_code_id: Option<String>,
    /// Notes about the time off request
    #[serde(rename = "notes", skip_serializing_if = "Option::is_none")]
    pub notes: Option<String>,
    /// A set of dates in yyyy-MM-dd format.  Should be interpreted in the management unit's configured time zone.
    #[serde(rename = "fullDayManagementUnitDates", skip_serializing_if = "Option::is_none")]
    pub full_day_management_unit_dates: Option<Vec<String>>,
    /// A set of start date-times in ISO-8601 format for partial day requests.
    #[serde(rename = "partialDayStartDateTimes", skip_serializing_if = "Option::is_none")]
    pub partial_day_start_date_times: Option<Vec<String>>,
    /// The daily duration of this time off request in minutes
    #[serde(rename = "dailyDurationMinutes", skip_serializing_if = "Option::is_none")]
    pub daily_duration_minutes: Option<i32>,
    #[serde(rename = "metadata")]
    pub metadata: Box<crate::models::WfmVersionedEntityMetadata>,
}

impl AdminTimeOffRequestPatch {
    pub fn new(metadata: crate::models::WfmVersionedEntityMetadata) -> AdminTimeOffRequestPatch {
        AdminTimeOffRequestPatch {
            status: None,
            activity_code_id: None,
            notes: None,
            full_day_management_unit_dates: None,
            partial_day_start_date_times: None,
            daily_duration_minutes: None,
            metadata: Box::new(metadata),
        }
    }
}

/// The status of this time off request
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "PENDING")]
    PENDING,
    #[serde(rename = "APPROVED")]
    APPROVED,
    #[serde(rename = "DENIED")]
    DENIED,
}

impl Default for Status {
    fn default() -> Status {
        Self::PENDING
    }
}

