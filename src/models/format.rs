/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Format {
    /// The Set of prompt segment format flags i.e. each entry is a part of describing the overall format. E.g. \"format\": { \"flags\": [StringPlayChars] }
    #[serde(rename = "flags", skip_serializing_if = "Option::is_none")]
    pub flags: Option<std::collections::HashSet<Flags>>,
}

impl Format {
    pub fn new() -> Format {
        Format {
            flags: None,
        }
    }
}

/// The Set of prompt segment format flags i.e. each entry is a part of describing the overall format. E.g. \"format\": { \"flags\": [StringPlayChars] }
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Flags {
    #[serde(rename = "BoolPlayYesNo")]
    BoolPlayYesNo,
    #[serde(rename = "CurrencyAsMinorUnits")]
    CurrencyAsMinorUnits,
    #[serde(rename = "CurrencyMajorUnitsOnly")]
    CurrencyMajorUnitsOnly,
    #[serde(rename = "CurrencyMinorUnitsOnly")]
    CurrencyMinorUnitsOnly,
    #[serde(rename = "CurrencyPlayDigits")]
    CurrencyPlayDigits,
    #[serde(rename = "DateLongYear")]
    DateLongYear,
    #[serde(rename = "DateShortYear")]
    DateShortYear,
    #[serde(rename = "DateShortMonthAndDay")]
    DateShortMonthAndDay,
    #[serde(rename = "DateDayOfWeekOnly")]
    DateDayOfWeekOnly,
    #[serde(rename = "DateDayOnly")]
    DateDayOnly,
    #[serde(rename = "DateMonthOnly")]
    DateMonthOnly,
    #[serde(rename = "DateShortYearOnly")]
    DateShortYearOnly,
    #[serde(rename = "DateLongYearOnly")]
    DateLongYearOnly,
    #[serde(rename = "TimeTwentyFourHours")]
    TimeTwentyFourHours,
    #[serde(rename = "TimeTwelveHours")]
    TimeTwelveHours,
    #[serde(rename = "TimePartDays")]
    TimePartDays,
    #[serde(rename = "TimePartHours")]
    TimePartHours,
    #[serde(rename = "TimePartMinutes")]
    TimePartMinutes,
    #[serde(rename = "TimePartSeconds")]
    TimePartSeconds,
    #[serde(rename = "StringPlayChars")]
    StringPlayChars,
    #[serde(rename = "NumberPlayDigits")]
    NumberPlayDigits,
    #[serde(rename = "NumberOrdinal")]
    NumberOrdinal,
    #[serde(rename = "LanguageCaseArticle")]
    LanguageCaseArticle,
    #[serde(rename = "LanguageCaseAccusative")]
    LanguageCaseAccusative,
    #[serde(rename = "LanguageCaseDative")]
    LanguageCaseDative,
    #[serde(rename = "LanguageCaseGenitive")]
    LanguageCaseGenitive,
    #[serde(rename = "LanguageCaseNominative")]
    LanguageCaseNominative,
    #[serde(rename = "LanguageQuantityPlural")]
    LanguageQuantityPlural,
    #[serde(rename = "LanguageQuantitySingular")]
    LanguageQuantitySingular,
    #[serde(rename = "LanguageGenderCommon")]
    LanguageGenderCommon,
    #[serde(rename = "LanguageGenderFeminine")]
    LanguageGenderFeminine,
    #[serde(rename = "LanguageGenderMasculine")]
    LanguageGenderMasculine,
    #[serde(rename = "LanguageGenderNeuter")]
    LanguageGenderNeuter,
}

impl Default for Flags {
    fn default() -> Flags {
        Self::BoolPlayYesNo
    }
}

