/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DialerContact {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The identifier of the contact list containing this contact.
    #[serde(rename = "contactListId")]
    pub contact_list_id: String,
    /// An ordered map of the contact's columns and corresponding values.
    #[serde(rename = "data")]
    pub data: ::std::collections::HashMap<String, serde_json::Value>,
    /// A map of call records for the contact phone columns.
    #[serde(rename = "callRecords", skip_serializing_if = "Option::is_none")]
    pub call_records: Option<::std::collections::HashMap<String, crate::models::CallRecord>>,
    /// A map of SMS records for the contact phone columns.
    #[serde(rename = "latestSmsEvaluations", skip_serializing_if = "Option::is_none")]
    pub latest_sms_evaluations: Option<::std::collections::HashMap<String, crate::models::MessageEvaluation>>,
    /// Indicates whether or not the contact can be called.
    #[serde(rename = "callable", skip_serializing_if = "Option::is_none")]
    pub callable: Option<bool>,
    /// A map of phone number columns to PhoneNumberStatuses, which indicate if the phone number is callable or not.
    #[serde(rename = "phoneNumberStatus", skip_serializing_if = "Option::is_none")]
    pub phone_number_status: Option<::std::collections::HashMap<String, crate::models::PhoneNumberStatus>>,
    /// Map containing data about the timezone the contact is mapped to. This will only be populated if the contact list has automatic timezone mapping turned on. The key is the column name. The value is the timezone it mapped to and the type of column: Phone or Zip
    #[serde(rename = "contactColumnTimeZones", skip_serializing_if = "Option::is_none")]
    pub contact_column_time_zones: Option<::std::collections::HashMap<String, crate::models::ContactColumnTimeZone>>,
    #[serde(rename = "configurationOverrides", skip_serializing_if = "Option::is_none")]
    pub configuration_overrides: Option<Box<crate::models::ConfigurationOverrides>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl DialerContact {
    pub fn new(contact_list_id: String, data: ::std::collections::HashMap<String, serde_json::Value>) -> DialerContact {
        DialerContact {
            id: None,
            name: None,
            contact_list_id,
            data,
            call_records: None,
            latest_sms_evaluations: None,
            callable: None,
            phone_number_status: None,
            contact_column_time_zones: None,
            configuration_overrides: None,
            self_uri: None,
        }
    }
}


