/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ScimServiceProviderConfig : Defines a SCIM service provider's configuration.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ScimServiceProviderConfig {
    /// The list of supported schemas.
    #[serde(rename = "schemas", skip_serializing_if = "Option::is_none")]
    pub schemas: Option<Vec<String>>,
    /// The HTTP-addressable URL that points to the service provider's documentation.
    #[serde(rename = "documentationUri", skip_serializing_if = "Option::is_none")]
    pub documentation_uri: Option<String>,
    #[serde(rename = "patch", skip_serializing_if = "Option::is_none")]
    pub patch: Option<Box<crate::models::ScimServiceProviderConfigSimpleFeature>>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<crate::models::ScimServiceProviderConfigFilterFeature>>,
    #[serde(rename = "etag", skip_serializing_if = "Option::is_none")]
    pub etag: Option<Box<crate::models::ScimServiceProviderConfigSimpleFeature>>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<Box<crate::models::ScimServiceProviderConfigSimpleFeature>>,
    #[serde(rename = "bulk", skip_serializing_if = "Option::is_none")]
    pub bulk: Option<Box<crate::models::ScimServiceProviderConfigBulkFeature>>,
    #[serde(rename = "changePassword", skip_serializing_if = "Option::is_none")]
    pub change_password: Option<Box<crate::models::ScimServiceProviderConfigSimpleFeature>>,
    /// The list of supported authentication schemes.
    #[serde(rename = "authenticationSchemes", skip_serializing_if = "Option::is_none")]
    pub authentication_schemes: Option<Vec<crate::models::ScimServiceProviderConfigAuthenticationScheme>>,
    #[serde(rename = "meta", skip_serializing_if = "Option::is_none")]
    pub meta: Option<Box<crate::models::ScimMetadata>>,
}

impl ScimServiceProviderConfig {
    /// Defines a SCIM service provider's configuration.
    pub fn new() -> ScimServiceProviderConfig {
        ScimServiceProviderConfig {
            schemas: None,
            documentation_uri: None,
            patch: None,
            filter: None,
            etag: None,
            sort: None,
            bulk: None,
            change_password: None,
            authentication_schemes: None,
            meta: None,
        }
    }
}


