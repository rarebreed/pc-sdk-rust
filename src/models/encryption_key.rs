/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EncryptionKey {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// create date of the key pair. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "createDate", skip_serializing_if = "Option::is_none")]
    pub create_date: Option<String>,
    /// key data summary (base 64 encoded public key)
    #[serde(rename = "keydataSummary", skip_serializing_if = "Option::is_none")]
    pub keydata_summary: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::User>>,
    #[serde(rename = "localEncryptionConfiguration", skip_serializing_if = "Option::is_none")]
    pub local_encryption_configuration: Option<Box<crate::models::LocalEncryptionConfiguration>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl EncryptionKey {
    pub fn new() -> EncryptionKey {
        EncryptionKey {
            id: None,
            name: None,
            create_date: None,
            keydata_summary: None,
            user: None,
            local_encryption_configuration: None,
            self_uri: None,
        }
    }
}


