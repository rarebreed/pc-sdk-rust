/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CampaignSequence {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    /// Required for updates, must match the version number of the most recent update
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i32>,
    /// The ordered list of Campaigns that this CampaignSequence will run.
    #[serde(rename = "campaigns")]
    pub campaigns: Vec<crate::models::DomainEntityRef>,
    /// A zero-based index indicating which Campaign this CampaignSequence is currently on.
    #[serde(rename = "currentCampaign")]
    pub current_campaign: i32,
    /// The current status of the CampaignSequence. A CampaignSequence can be turned 'on' or 'off'.
    #[serde(rename = "status")]
    pub status: Status,
    /// A message indicating if and why a CampaignSequence has stopped unexpectedly.
    #[serde(rename = "stopMessage", skip_serializing_if = "Option::is_none")]
    pub stop_message: Option<String>,
    /// Indicates if a sequence should repeat from the beginning after the last campaign completes. Default is false.
    #[serde(rename = "repeat", skip_serializing_if = "Option::is_none")]
    pub repeat: Option<bool>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl CampaignSequence {
    pub fn new(campaigns: Vec<crate::models::DomainEntityRef>, current_campaign: i32, status: Status) -> CampaignSequence {
        CampaignSequence {
            id: None,
            name: None,
            date_created: None,
            date_modified: None,
            version: None,
            campaigns,
            current_campaign,
            status,
            stop_message: None,
            repeat: None,
            self_uri: None,
        }
    }
}

/// The current status of the CampaignSequence. A CampaignSequence can be turned 'on' or 'off'.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "on")]
    On,
    #[serde(rename = "off")]
    Off,
    #[serde(rename = "complete")]
    Complete,
}

impl Default for Status {
    fn default() -> Status {
        Self::On
    }
}

