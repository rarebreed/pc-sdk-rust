/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Attachment {
    /// The unique identifier for the attachment.
    #[serde(rename = "attachmentId", skip_serializing_if = "Option::is_none")]
    pub attachment_id: Option<String>,
    /// The name of the attachment.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The content uri of the attachment. If set, this is commonly a public api download location.
    #[serde(rename = "contentUri", skip_serializing_if = "Option::is_none")]
    pub content_uri: Option<String>,
    /// The type of file the attachment is.
    #[serde(rename = "contentType", skip_serializing_if = "Option::is_none")]
    pub content_type: Option<String>,
    /// The length of the attachment file.
    #[serde(rename = "contentLength", skip_serializing_if = "Option::is_none")]
    pub content_length: Option<i32>,
    /// Whether or not the attachment was attached inline.,
    #[serde(rename = "inlineImage", skip_serializing_if = "Option::is_none")]
    pub inline_image: Option<bool>,
}

impl Attachment {
    pub fn new() -> Attachment {
        Attachment {
            attachment_id: None,
            name: None,
            content_uri: None,
            content_type: None,
            content_length: None,
            inline_image: None,
        }
    }
}


