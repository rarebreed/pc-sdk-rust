/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AuditQueryService {
    /// Name of the Service
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<Name>,
    /// List of Entities
    #[serde(rename = "entities", skip_serializing_if = "Option::is_none")]
    pub entities: Option<Vec<crate::models::AuditQueryEntity>>,
}

impl AuditQueryService {
    pub fn new() -> AuditQueryService {
        AuditQueryService {
            name: None,
            entities: None,
        }
    }
}

/// Name of the Service
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Name {
    #[serde(rename = "AnalyticsReporting")]
    AnalyticsReporting,
    #[serde(rename = "Architect")]
    Architect,
    #[serde(rename = "Coaching")]
    Coaching,
    #[serde(rename = "ContactCenter")]
    ContactCenter,
    #[serde(rename = "ContentManagement")]
    ContentManagement,
    #[serde(rename = "Datatables")]
    Datatables,
    #[serde(rename = "Directory")]
    Directory,
    #[serde(rename = "DynamicSchema")]
    DynamicSchema,
    #[serde(rename = "Gamification")]
    Gamification,
    #[serde(rename = "Groups")]
    Groups,
    #[serde(rename = "Integrations")]
    Integrations,
    #[serde(rename = "Knowledge")]
    Knowledge,
    #[serde(rename = "LanguageUnderstanding")]
    LanguageUnderstanding,
    #[serde(rename = "Learning")]
    Learning,
    #[serde(rename = "Limits")]
    Limits,
    #[serde(rename = "Outbound")]
    Outbound,
    #[serde(rename = "PeoplePermissions")]
    PeoplePermissions,
    #[serde(rename = "EmployeePerformance")]
    EmployeePerformance,
    #[serde(rename = "PredictiveEngagement")]
    PredictiveEngagement,
    #[serde(rename = "Presence")]
    Presence,
    #[serde(rename = "Quality")]
    Quality,
    #[serde(rename = "ResponseManagement")]
    ResponseManagement,
    #[serde(rename = "Routing")]
    Routing,
    #[serde(rename = "SpeechAndTextAnalytics")]
    SpeechAndTextAnalytics,
    #[serde(rename = "Telephony")]
    Telephony,
    #[serde(rename = "TopicsDefinitions")]
    TopicsDefinitions,
    #[serde(rename = "Triggers")]
    Triggers,
    #[serde(rename = "ProcessAutomation")]
    ProcessAutomation,
    #[serde(rename = "WebDeployments")]
    WebDeployments,
    #[serde(rename = "Webhooks")]
    Webhooks,
    #[serde(rename = "WorkforceManagement")]
    WorkforceManagement,
    #[serde(rename = "Messaging")]
    Messaging,
    #[serde(rename = "Supportability")]
    Supportability,
    #[serde(rename = "Callback")]
    Callback,
    #[serde(rename = "Workitems")]
    Workitems,
    #[serde(rename = "SCIM")]
    SCIM,
}

impl Default for Name {
    fn default() -> Name {
        Self::AnalyticsReporting
    }
}

