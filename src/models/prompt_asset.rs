/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PromptAsset {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Associated prompt ID
    #[serde(rename = "promptId", skip_serializing_if = "Option::is_none")]
    pub prompt_id: Option<String>,
    /// Prompt resource language
    #[serde(rename = "language", skip_serializing_if = "Option::is_none")]
    pub language: Option<String>,
    /// URI of the resource audio
    #[serde(rename = "mediaUri", skip_serializing_if = "Option::is_none")]
    pub media_uri: Option<String>,
    /// Text to speech of the resource
    #[serde(rename = "ttsString", skip_serializing_if = "Option::is_none")]
    pub tts_string: Option<String>,
    /// Text of the resource
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
    /// Audio upload status
    #[serde(rename = "uploadStatus", skip_serializing_if = "Option::is_none")]
    pub upload_status: Option<UploadStatus>,
    /// Upload URI for the resource audio
    #[serde(rename = "uploadUri", skip_serializing_if = "Option::is_none")]
    pub upload_uri: Option<String>,
    /// Whether or not this resource locale is the default for the language
    #[serde(rename = "languageDefault", skip_serializing_if = "Option::is_none")]
    pub language_default: Option<bool>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<::std::collections::HashMap<String, Vec<String>>>,
    #[serde(rename = "durationSeconds", skip_serializing_if = "Option::is_none")]
    pub duration_seconds: Option<f64>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl PromptAsset {
    pub fn new() -> PromptAsset {
        PromptAsset {
            id: None,
            name: None,
            prompt_id: None,
            language: None,
            media_uri: None,
            tts_string: None,
            text: None,
            upload_status: None,
            upload_uri: None,
            language_default: None,
            tags: None,
            duration_seconds: None,
            self_uri: None,
        }
    }
}

/// Audio upload status
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UploadStatus {
    #[serde(rename = "created")]
    Created,
    #[serde(rename = "uploaded")]
    Uploaded,
    #[serde(rename = "transcoded")]
    Transcoded,
    #[serde(rename = "transcodeFailed")]
    TranscodeFailed,
}

impl Default for UploadStatus {
    fn default() -> UploadStatus {
        Self::Created
    }
}

