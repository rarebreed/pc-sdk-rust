/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebChatMemberInfo {
    /// The communicationId of this member.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The display name of the member.
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    /// The first name of the member.
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    /// The last name of the member.
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    /// The email address of the member.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// The phone number of the member.
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    /// The url to the avatar image of the member.
    #[serde(rename = "avatarImageUrl", skip_serializing_if = "Option::is_none")]
    pub avatar_image_url: Option<String>,
    /// The role of the member, one of [agent, customer, acd, workflow]
    #[serde(rename = "role")]
    pub role: Role,
    /// The time the member joined the conversation. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "joinDate", skip_serializing_if = "Option::is_none")]
    pub join_date: Option<String>,
    /// The time the member left the conversation, or null if the member is still active in the conversation. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "leaveDate", skip_serializing_if = "Option::is_none")]
    pub leave_date: Option<String>,
    /// If true, the guest member is an authenticated guest.
    #[serde(rename = "authenticatedGuest", skip_serializing_if = "Option::is_none")]
    pub authenticated_guest: Option<bool>,
    /// Any custom fields of information pertaining to this member.
    #[serde(rename = "customFields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<::std::collections::HashMap<String, String>>,
    /// The connection state of this member.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<State>,
}

impl WebChatMemberInfo {
    pub fn new(role: Role) -> WebChatMemberInfo {
        WebChatMemberInfo {
            id: None,
            display_name: None,
            first_name: None,
            last_name: None,
            email: None,
            phone_number: None,
            avatar_image_url: None,
            role,
            join_date: None,
            leave_date: None,
            authenticated_guest: None,
            custom_fields: None,
            state: None,
        }
    }
}

/// The role of the member, one of [agent, customer, acd, workflow]
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Role {
    #[serde(rename = "AGENT")]
    AGENT,
    #[serde(rename = "CUSTOMER")]
    CUSTOMER,
    #[serde(rename = "WORKFLOW")]
    WORKFLOW,
    #[serde(rename = "ACD")]
    ACD,
}

impl Default for Role {
    fn default() -> Role {
        Self::AGENT
    }
}
/// The connection state of this member.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "CONNECTED")]
    CONNECTED,
    #[serde(rename = "DISCONNECTED")]
    DISCONNECTED,
    #[serde(rename = "ALERTING")]
    ALERTING,
}

impl Default for State {
    fn default() -> State {
        Self::CONNECTED
    }
}

