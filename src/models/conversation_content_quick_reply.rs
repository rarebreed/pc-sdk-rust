/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ConversationContentQuickReply : Quick reply object.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConversationContentQuickReply {
    /// Text to show inside the quick reply. This is also used as the response text after clicking on the quick reply.
    #[serde(rename = "text")]
    pub text: String,
    /// Content of the payload included in the quick reply response. Could be an ID identifying the quick reply response.
    #[serde(rename = "payload")]
    pub payload: String,
    /// URL of an image associated with the quick reply.
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
    /// Specifies the type of action that is triggered upon clicking the quick reply.
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<Action>,
}

impl ConversationContentQuickReply {
    /// Quick reply object.
    pub fn new(text: String, payload: String) -> ConversationContentQuickReply {
        ConversationContentQuickReply {
            text,
            payload,
            image: None,
            action: None,
        }
    }
}

/// Specifies the type of action that is triggered upon clicking the quick reply.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Action {
    #[serde(rename = "Message")]
    Message,
}

impl Default for Action {
    fn default() -> Action {
        Self::Message
    }
}

