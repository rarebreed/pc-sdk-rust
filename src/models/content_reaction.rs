/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ContentReaction : User reaction to public message.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ContentReaction {
    /// Type of reaction.
    #[serde(rename = "reactionType", skip_serializing_if = "Option::is_none")]
    pub reaction_type: Option<ReactionType>,
    /// Number of users that reacted this way to the message.
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
}

impl ContentReaction {
    /// User reaction to public message.
    pub fn new() -> ContentReaction {
        ContentReaction {
            reaction_type: None,
            count: None,
        }
    }
}

/// Type of reaction.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReactionType {
    #[serde(rename = "Like")]
    Like,
    #[serde(rename = "Love")]
    Love,
    #[serde(rename = "Wow")]
    Wow,
    #[serde(rename = "Haha")]
    Haha,
    #[serde(rename = "Sad")]
    Sad,
    #[serde(rename = "Angry")]
    Angry,
    #[serde(rename = "Thankful")]
    Thankful,
    #[serde(rename = "Pride")]
    Pride,
    #[serde(rename = "Care")]
    Care,
}

impl Default for ReactionType {
    fn default() -> ReactionType {
        Self::Like
    }
}

