/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ConversationNotificationTemplateHeader : Template header object.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConversationNotificationTemplateHeader {
    /// Template header type.
    #[serde(rename = "type")]
    pub _type: Type,
    /// Header text. For WhatsApp, ignored.
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
    #[serde(rename = "media", skip_serializing_if = "Option::is_none")]
    pub media: Option<Box<crate::models::ConversationContentAttachment>>,
    /// Template parameters for placeholders in template.
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<crate::models::ConversationNotificationTemplateParameter>>,
}

impl ConversationNotificationTemplateHeader {
    /// Template header object.
    pub fn new(_type: Type) -> ConversationNotificationTemplateHeader {
        ConversationNotificationTemplateHeader {
            _type,
            text: None,
            media: None,
            parameters: None,
        }
    }
}

/// Template header type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Text")]
    Text,
    #[serde(rename = "Media")]
    Media,
}

impl Default for Type {
    fn default() -> Type {
        Self::Text
    }
}

