/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct KnowledgeExtendedCategory {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Category name
    #[serde(rename = "name")]
    pub name: String,
    /// Category description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "knowledgeBase", skip_serializing_if = "Option::is_none")]
    pub knowledge_base: Option<Box<crate::models::KnowledgeBase>>,
    /// Actual language of the category
    #[serde(rename = "languageCode", skip_serializing_if = "Option::is_none")]
    pub language_code: Option<LanguageCode>,
    /// Category creation date-time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// Category last modification date-time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<Box<crate::models::KnowledgeCategory>>,
    /// Category children
    #[serde(rename = "children", skip_serializing_if = "Option::is_none")]
    pub children: Option<Vec<crate::models::KnowledgeCategory>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl KnowledgeExtendedCategory {
    pub fn new(name: String) -> KnowledgeExtendedCategory {
        KnowledgeExtendedCategory {
            id: None,
            name,
            description: None,
            knowledge_base: None,
            language_code: None,
            date_created: None,
            date_modified: None,
            parent: None,
            children: None,
            self_uri: None,
        }
    }
}

/// Actual language of the category
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LanguageCode {
    #[serde(rename = "en-US")]
    EnUS,
    #[serde(rename = "en-UK")]
    EnUK,
    #[serde(rename = "en-AU")]
    EnAU,
    #[serde(rename = "de-DE")]
    DeDE,
}

impl Default for LanguageCode {
    fn default() -> LanguageCode {
        Self::EnUS
    }
}

