/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CampaignRuleParameters {
    /// The operator for comparison. Required for a CampaignRuleCondition.
    #[serde(rename = "operator", skip_serializing_if = "Option::is_none")]
    pub operator: Option<Operator>,
    /// The value for comparison. Required for a CampaignRuleCondition.
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    /// The priority to set a campaign to. Required for the 'setCampaignPriority' action.
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<Priority>,
    /// The dialing mode to set a campaign to. Required for the 'setCampaignDialingMode' action.
    #[serde(rename = "dialingMode", skip_serializing_if = "Option::is_none")]
    pub dialing_mode: Option<DialingMode>,
}

impl CampaignRuleParameters {
    pub fn new() -> CampaignRuleParameters {
        CampaignRuleParameters {
            operator: None,
            value: None,
            priority: None,
            dialing_mode: None,
        }
    }
}

/// The operator for comparison. Required for a CampaignRuleCondition.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operator {
    #[serde(rename = "equals")]
    Equals,
    #[serde(rename = "greaterThan")]
    GreaterThan,
    #[serde(rename = "greaterThanEqualTo")]
    GreaterThanEqualTo,
    #[serde(rename = "lessThan")]
    LessThan,
    #[serde(rename = "lessThanEqualTo")]
    LessThanEqualTo,
}

impl Default for Operator {
    fn default() -> Operator {
        Self::Equals
    }
}
/// The priority to set a campaign to. Required for the 'setCampaignPriority' action.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Priority {
    #[serde(rename = "1")]
    _1,
    #[serde(rename = "2")]
    _2,
    #[serde(rename = "3")]
    _3,
    #[serde(rename = "4")]
    _4,
    #[serde(rename = "5")]
    _5,
}

impl Default for Priority {
    fn default() -> Priority {
        Self::_1
    }
}
/// The dialing mode to set a campaign to. Required for the 'setCampaignDialingMode' action.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DialingMode {
    #[serde(rename = "agentless")]
    Agentless,
    #[serde(rename = "preview")]
    Preview,
    #[serde(rename = "power")]
    Power,
    #[serde(rename = "predictive")]
    Predictive,
    #[serde(rename = "progressive")]
    Progressive,
    #[serde(rename = "external")]
    External,
}

impl Default for DialingMode {
    fn default() -> DialingMode {
        Self::Agentless
    }
}

