/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WorkPlanConstraintMessage {
    /// Type of the work plan constraint in this message
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    /// Arguments of the message that provide information about the constraint that is being conflicted with, such as the value of the constraint
    #[serde(rename = "arguments", skip_serializing_if = "Option::is_none")]
    pub arguments: Option<Vec<crate::models::WorkPlanValidationMessageArgument>>,
}

impl WorkPlanConstraintMessage {
    pub fn new() -> WorkPlanConstraintMessage {
        WorkPlanConstraintMessage {
            _type: None,
            arguments: None,
        }
    }
}

/// Type of the work plan constraint in this message
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "ActivityEarliestStartTimeMinutesFromMidnight")]
    ActivityEarliestStartTimeMinutesFromMidnight,
    #[serde(rename = "ActivityEarliestStartTimeMinutesFromShiftStart")]
    ActivityEarliestStartTimeMinutesFromShiftStart,
    #[serde(rename = "ActivityLatestStartTimeMinutesFromMidnight")]
    ActivityLatestStartTimeMinutesFromMidnight,
    #[serde(rename = "ActivityLatestStartTimeMinutesFromShiftStart")]
    ActivityLatestStartTimeMinutesFromShiftStart,
    #[serde(rename = "ActivityMinimumLengthFromShiftEndMinutes")]
    ActivityMinimumLengthFromShiftEndMinutes,
    #[serde(rename = "ActivityMinimumLengthFromShiftStartMinutes")]
    ActivityMinimumLengthFromShiftStartMinutes,
    #[serde(rename = "ActivityStartTimeIncrementInMinutes")]
    ActivityStartTimeIncrementInMinutes,
    #[serde(rename = "PlanningPeriodMaximumDaysOff")]
    PlanningPeriodMaximumDaysOff,
    #[serde(rename = "PlanningPeriodMaximumPaidTimeMinutes")]
    PlanningPeriodMaximumPaidTimeMinutes,
    #[serde(rename = "PlanningPeriodMinimumDaysOff")]
    PlanningPeriodMinimumDaysOff,
    #[serde(rename = "PlanningPeriodMinimumPaidTimeMinutes")]
    PlanningPeriodMinimumPaidTimeMinutes,
    #[serde(rename = "ShiftDayOffRule")]
    ShiftDayOffRule,
    #[serde(rename = "ShiftEarliestStartTimeMinutesFromMidnight")]
    ShiftEarliestStartTimeMinutesFromMidnight,
    #[serde(rename = "ShiftEarliestStopTimeMinutesFromMidnight")]
    ShiftEarliestStopTimeMinutesFromMidnight,
    #[serde(rename = "ShiftLatestStartTimeMinutesFromMidnight")]
    ShiftLatestStartTimeMinutesFromMidnight,
    #[serde(rename = "ShiftLatestStopTimeMinutesFromMidnight")]
    ShiftLatestStopTimeMinutesFromMidnight,
    #[serde(rename = "ShiftMaximumContiguousTimeMinutes")]
    ShiftMaximumContiguousTimeMinutes,
    #[serde(rename = "ShiftMaximumPaidTimeMinutes")]
    ShiftMaximumPaidTimeMinutes,
    #[serde(rename = "ShiftMinimumContiguousTimeMinutes")]
    ShiftMinimumContiguousTimeMinutes,
    #[serde(rename = "ShiftMinimumPaidTimeMinutes")]
    ShiftMinimumPaidTimeMinutes,
    #[serde(rename = "ShiftStartTimeIncrementInMinutes")]
    ShiftStartTimeIncrementInMinutes,
    #[serde(rename = "ShiftStartVarianceMaximumVarianceMinutes")]
    ShiftStartVarianceMaximumVarianceMinutes,
    #[serde(rename = "ShiftStartVariancePaidDuration")]
    ShiftStartVariancePaidDuration,
    #[serde(rename = "WorkPlanMaximumConsecutiveWorkingDays")]
    WorkPlanMaximumConsecutiveWorkingDays,
    #[serde(rename = "WorkPlanMaximumConsecutiveWorkingWeekends")]
    WorkPlanMaximumConsecutiveWorkingWeekends,
    #[serde(rename = "WorkPlanMaximumWeeklyPaidTimeMinutes")]
    WorkPlanMaximumWeeklyPaidTimeMinutes,
    #[serde(rename = "WorkPlanMaximumWorkingDaysPerWeek")]
    WorkPlanMaximumWorkingDaysPerWeek,
    #[serde(rename = "WorkPlanMinimumConsecutiveNonWorkingTimePerWeekMinutes")]
    WorkPlanMinimumConsecutiveNonWorkingTimePerWeekMinutes,
    #[serde(rename = "WorkPlanMinimumInterShiftTimeMinutes")]
    WorkPlanMinimumInterShiftTimeMinutes,
    #[serde(rename = "WorkPlanMinimumShiftStartDistanceMinutes")]
    WorkPlanMinimumShiftStartDistanceMinutes,
    #[serde(rename = "WorkPlanMinimumWeeklyPaidTimeMinutes")]
    WorkPlanMinimumWeeklyPaidTimeMinutes,
    #[serde(rename = "WorkPlanMinimumWorkingDaysPerWeek")]
    WorkPlanMinimumWorkingDaysPerWeek,
    #[serde(rename = "WorkPlanOptionalDays")]
    WorkPlanOptionalDays,
    #[serde(rename = "WorkPlanPaidTimeGranularityMinutes")]
    WorkPlanPaidTimeGranularityMinutes,
}

impl Default for Type {
    fn default() -> Type {
        Self::ActivityEarliestStartTimeMinutesFromMidnight
    }
}

