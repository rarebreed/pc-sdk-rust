/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WidgetDeployment {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// A human-readable description of this Deployment.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// When true, the customer members starting a chat must be authenticated by supplying their JWT to the create operation.
    #[serde(rename = "authenticationRequired", skip_serializing_if = "Option::is_none")]
    pub authentication_required: Option<bool>,
    /// When true, all create chat operations using this Deployment will be rejected.
    #[serde(rename = "disabled", skip_serializing_if = "Option::is_none")]
    pub disabled: Option<bool>,
    #[serde(rename = "flow", skip_serializing_if = "Option::is_none")]
    pub flow: Option<Box<crate::models::DomainEntityRef>>,
    /// The list of domains that are approved to use this Deployment; the list will be added to CORS headers for ease of web use.
    #[serde(rename = "allowedDomains", skip_serializing_if = "Option::is_none")]
    pub allowed_domains: Option<Vec<String>>,
    /// The type of display widget for which this Deployment is configured, which controls the administrator settings shown.
    #[serde(rename = "clientType", skip_serializing_if = "Option::is_none")]
    pub client_type: Option<ClientType>,
    #[serde(rename = "clientConfig", skip_serializing_if = "Option::is_none")]
    pub client_config: Option<Box<crate::models::WidgetClientConfig>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl WidgetDeployment {
    pub fn new() -> WidgetDeployment {
        WidgetDeployment {
            id: None,
            name: None,
            description: None,
            authentication_required: None,
            disabled: None,
            flow: None,
            allowed_domains: None,
            client_type: None,
            client_config: None,
            self_uri: None,
        }
    }
}

/// The type of display widget for which this Deployment is configured, which controls the administrator settings shown.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ClientType {
    #[serde(rename = "v1")]
    V1,
    #[serde(rename = "v2")]
    V2,
    #[serde(rename = "v1-http")]
    V1Http,
    #[serde(rename = "third-party")]
    ThirdParty,
}

impl Default for ClientType {
    fn default() -> ClientType {
        Self::V1
    }
}

