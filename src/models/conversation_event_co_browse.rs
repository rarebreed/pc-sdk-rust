/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ConversationEventCoBrowse : A CoBrowse event.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConversationEventCoBrowse {
    /// Describes the type of CoBrowse event.
    #[serde(rename = "type")]
    pub _type: Type,
    /// The CoBrowse session ID.
    #[serde(rename = "sessionId", skip_serializing_if = "Option::is_none")]
    pub session_id: Option<String>,
    /// The CoBrowse session join token.
    #[serde(rename = "sessionJoinToken", skip_serializing_if = "Option::is_none")]
    pub session_join_token: Option<String>,
}

impl ConversationEventCoBrowse {
    /// A CoBrowse event.
    pub fn new(_type: Type) -> ConversationEventCoBrowse {
        ConversationEventCoBrowse {
            _type,
            session_id: None,
            session_join_token: None,
        }
    }
}

/// Describes the type of CoBrowse event.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Offering")]
    Offering,
    #[serde(rename = "OfferingExpired")]
    OfferingExpired,
    #[serde(rename = "OfferingAccepted")]
    OfferingAccepted,
    #[serde(rename = "OfferingRejected")]
    OfferingRejected,
}

impl Default for Type {
    fn default() -> Type {
        Self::Offering
    }
}

