/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// WeekSchedule : Week schedule information



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WeekSchedule {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
    /// First day of this week schedule in yyyy-MM-dd format
    #[serde(rename = "weekDate", skip_serializing_if = "Option::is_none")]
    pub week_date: Option<String>,
    /// Description of the week schedule
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Whether the week schedule is published
    #[serde(rename = "published", skip_serializing_if = "Option::is_none")]
    pub published: Option<bool>,
    #[serde(rename = "generationResults", skip_serializing_if = "Option::is_none")]
    pub generation_results: Option<Box<crate::models::WeekScheduleGenerationResult>>,
    #[serde(rename = "shortTermForecast", skip_serializing_if = "Option::is_none")]
    pub short_term_forecast: Option<Box<crate::models::ShortTermForecastReference>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::WfmVersionedEntityMetadata>>,
    /// User schedules in the week
    #[serde(rename = "userSchedules", skip_serializing_if = "Option::is_none")]
    pub user_schedules: Option<::std::collections::HashMap<String, crate::models::UserSchedule>>,
    #[serde(rename = "headcountForecast", skip_serializing_if = "Option::is_none")]
    pub headcount_forecast: Option<Box<crate::models::HeadcountForecast>>,
    /// Version of agent schedules in the week schedule
    #[serde(rename = "agentSchedulesVersion", skip_serializing_if = "Option::is_none")]
    pub agent_schedules_version: Option<i32>,
}

impl WeekSchedule {
    /// Week schedule information
    pub fn new() -> WeekSchedule {
        WeekSchedule {
            id: None,
            self_uri: None,
            week_date: None,
            description: None,
            published: None,
            generation_results: None,
            short_term_forecast: None,
            metadata: None,
            user_schedules: None,
            headcount_forecast: None,
            agent_schedules_version: None,
        }
    }
}


