/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CoachingSlotsRequest {
    /// Range of time to get slots for scheduling coaching appointments. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
    #[serde(rename = "interval")]
    pub interval: String,
    /// The duration of coaching appointment to schedule in 15 minutes granularity up to maximum of 60 minutes
    #[serde(rename = "lengthInMinutes")]
    pub length_in_minutes: i32,
    /// List of attendees to determine coaching appointment slots
    #[serde(rename = "attendeeIds")]
    pub attendee_ids: Vec<String>,
    /// List of facilitators to determine coaching appointment slots
    #[serde(rename = "facilitatorIds", skip_serializing_if = "Option::is_none")]
    pub facilitator_ids: Option<Vec<String>>,
    /// List of appointment ids to exclude from consideration when determining blocked slots
    #[serde(rename = "interruptibleAppointmentIds", skip_serializing_if = "Option::is_none")]
    pub interruptible_appointment_ids: Option<Vec<String>>,
}

impl CoachingSlotsRequest {
    pub fn new(interval: String, length_in_minutes: i32, attendee_ids: Vec<String>) -> CoachingSlotsRequest {
        CoachingSlotsRequest {
            interval,
            length_in_minutes,
            attendee_ids,
            facilitator_ids: None,
            interruptible_appointment_ids: None,
        }
    }
}


