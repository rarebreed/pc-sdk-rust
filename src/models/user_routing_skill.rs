/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// UserRoutingSkill : Represents an organization skill assigned to a user. When assigning to a user specify the organization skill id as the id.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UserRoutingSkill {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// A rating from 0.0 to 5.0 that indicates how adept an agent is at a particular skill. When \"Best available skills\" is enabled for a queue in Genesys Cloud, ACD interactions in that queue are routed to agents with higher proficiency ratings.
    #[serde(rename = "proficiency", skip_serializing_if = "Option::is_none")]
    pub proficiency: Option<f64>,
    /// Activate or deactivate this routing skill.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<State>,
    /// URI to the organization skill used by this user skill.
    #[serde(rename = "skillUri", skip_serializing_if = "Option::is_none")]
    pub skill_uri: Option<String>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl UserRoutingSkill {
    /// Represents an organization skill assigned to a user. When assigning to a user specify the organization skill id as the id.
    pub fn new() -> UserRoutingSkill {
        UserRoutingSkill {
            id: None,
            name: None,
            proficiency: None,
            state: None,
            skill_uri: None,
            self_uri: None,
        }
    }
}

/// Activate or deactivate this routing skill.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "deleted")]
    Deleted,
}

impl Default for State {
    fn default() -> State {
        Self::Active
    }
}

