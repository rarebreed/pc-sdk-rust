/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TtsEngineEntity {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The set of languages the TTS engine supports
    #[serde(rename = "languages")]
    pub languages: Vec<String>,
    /// The set of output formats the TTS engine can produce
    #[serde(rename = "outputFormats")]
    pub output_formats: Vec<String>,
    /// The set of voices the TTS engine supports
    #[serde(rename = "voices", skip_serializing_if = "Option::is_none")]
    pub voices: Option<Vec<crate::models::TtsVoiceEntity>>,
    /// The TTS engine is the global default engine
    #[serde(rename = "isDefault", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<bool>,
    /// The TTS engine can be used in a secure call flow
    #[serde(rename = "isSecure", skip_serializing_if = "Option::is_none")]
    pub is_secure: Option<bool>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl TtsEngineEntity {
    pub fn new(languages: Vec<String>, output_formats: Vec<String>) -> TtsEngineEntity {
        TtsEngineEntity {
            id: None,
            name: None,
            languages,
            output_formats,
            voices: None,
            is_default: None,
            is_secure: None,
            self_uri: None,
        }
    }
}


