/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct KnowledgeSearchRequest {
    /// Input query to search content in the knowledge base
    #[serde(rename = "query")]
    pub query: String,
    /// Page size of the returned results
    #[serde(rename = "pageSize", skip_serializing_if = "Option::is_none")]
    pub page_size: Option<i32>,
    /// Page number of the returned results
    #[serde(rename = "pageNumber", skip_serializing_if = "Option::is_none")]
    pub page_number: Option<i32>,
    /// Document type to be used while searching
    #[serde(rename = "documentType", skip_serializing_if = "Option::is_none")]
    pub document_type: Option<DocumentType>,
    /// query search for specific languageCode
    #[serde(rename = "languageCode")]
    pub language_code: String,
    /// If true the search query will be executed on draft documents, else it will be on active documents
    #[serde(rename = "searchOnDraftDocuments", skip_serializing_if = "Option::is_none")]
    pub search_on_draft_documents: Option<bool>,
}

impl KnowledgeSearchRequest {
    pub fn new(query: String, language_code: String) -> KnowledgeSearchRequest {
        KnowledgeSearchRequest {
            query,
            page_size: None,
            page_number: None,
            document_type: None,
            language_code,
            search_on_draft_documents: None,
        }
    }
}

/// Document type to be used while searching
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DocumentType {
    #[serde(rename = "Faq")]
    Faq,
    #[serde(rename = "Article")]
    Article,
}

impl Default for DocumentType {
    fn default() -> DocumentType {
        Self::Faq
    }
}

