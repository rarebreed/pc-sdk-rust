/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SubscriptionOverviewUsage {
    /// Product charge name
    #[serde(rename = "name")]
    pub name: String,
    /// Product part number
    #[serde(rename = "partNumber")]
    pub part_number: String,
    /// UI grouping key
    #[serde(rename = "grouping")]
    pub grouping: String,
    /// UI unit of measure
    #[serde(rename = "unitOfMeasureType")]
    pub unit_of_measure_type: String,
    /// Usage count for specified period
    #[serde(rename = "usageQuantity")]
    pub usage_quantity: String,
    /// Price for usage / overage charge
    #[serde(rename = "overagePrice", skip_serializing_if = "Option::is_none")]
    pub overage_price: Option<String>,
    /// Items prepaid for specified period
    #[serde(rename = "prepayQuantity")]
    pub prepay_quantity: String,
    /// Price for prepay charge
    #[serde(rename = "prepayPrice", skip_serializing_if = "Option::is_none")]
    pub prepay_price: Option<String>,
    /// Notes about the usage/charge item
    #[serde(rename = "usageNotes", skip_serializing_if = "Option::is_none")]
    pub usage_notes: Option<String>,
    /// Indicates whether the item is cancellable
    #[serde(rename = "isCancellable", skip_serializing_if = "Option::is_none")]
    pub is_cancellable: Option<bool>,
    /// Quantity multiplier for this charge
    #[serde(rename = "bundleQuantity", skip_serializing_if = "Option::is_none")]
    pub bundle_quantity: Option<String>,
    /// A charge from a third party entity
    #[serde(rename = "isThirdParty", skip_serializing_if = "Option::is_none")]
    pub is_third_party: Option<bool>,
}

impl SubscriptionOverviewUsage {
    pub fn new(name: String, part_number: String, grouping: String, unit_of_measure_type: String, usage_quantity: String, prepay_quantity: String) -> SubscriptionOverviewUsage {
        SubscriptionOverviewUsage {
            name,
            part_number,
            grouping,
            unit_of_measure_type,
            usage_quantity,
            overage_price: None,
            prepay_quantity,
            prepay_price: None,
            usage_notes: None,
            is_cancellable: None,
            bundle_quantity: None,
            is_third_party: None,
        }
    }
}


