/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EdgeInterface {
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "ipAddress", skip_serializing_if = "Option::is_none")]
    pub ip_address: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "macAddress", skip_serializing_if = "Option::is_none")]
    pub mac_address: Option<String>,
    #[serde(rename = "ifName", skip_serializing_if = "Option::is_none")]
    pub if_name: Option<String>,
    #[serde(rename = "endpoints", skip_serializing_if = "Option::is_none")]
    pub endpoints: Option<Vec<crate::models::DomainEntityRef>>,
    #[serde(rename = "lineTypes", skip_serializing_if = "Option::is_none")]
    pub line_types: Option<Vec<LineTypes>>,
    #[serde(rename = "addressFamilyId", skip_serializing_if = "Option::is_none")]
    pub address_family_id: Option<String>,
}

impl EdgeInterface {
    pub fn new() -> EdgeInterface {
        EdgeInterface {
            _type: None,
            ip_address: None,
            name: None,
            mac_address: None,
            if_name: None,
            endpoints: None,
            line_types: None,
            address_family_id: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LineTypes {
    #[serde(rename = "TIE")]
    TIE,
    #[serde(rename = "NETWORK")]
    NETWORK,
    #[serde(rename = "TRUNK")]
    TRUNK,
    #[serde(rename = "STATION")]
    STATION,
}

impl Default for LineTypes {
    fn default() -> LineTypes {
        Self::TIE
    }
}

