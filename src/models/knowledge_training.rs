/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct KnowledgeTraining {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Trigger date-time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateTriggered", skip_serializing_if = "Option::is_none")]
    pub date_triggered: Option<String>,
    /// Training completed date-time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCompleted", skip_serializing_if = "Option::is_none")]
    pub date_completed: Option<String>,
    /// Training status.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// Language of the documents that are trained.
    #[serde(rename = "languageCode", skip_serializing_if = "Option::is_none")]
    pub language_code: Option<String>,
    #[serde(rename = "knowledgeBase", skip_serializing_if = "Option::is_none")]
    pub knowledge_base: Option<Box<crate::models::KnowledgeBase>>,
    /// Any error message during the Training or Promote action.
    #[serde(rename = "errorMessage", skip_serializing_if = "Option::is_none")]
    pub error_message: Option<String>,
    /// State of the Trained Documents, which can be one of these Draft, Active, Discarded, Archived.
    #[serde(rename = "knowledgeDocumentsState", skip_serializing_if = "Option::is_none")]
    pub knowledge_documents_state: Option<KnowledgeDocumentsState>,
    /// Trained Documents Promoted date-time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "datePromoted", skip_serializing_if = "Option::is_none")]
    pub date_promoted: Option<String>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl KnowledgeTraining {
    pub fn new() -> KnowledgeTraining {
        KnowledgeTraining {
            id: None,
            date_triggered: None,
            date_completed: None,
            status: None,
            language_code: None,
            knowledge_base: None,
            error_message: None,
            knowledge_documents_state: None,
            date_promoted: None,
            self_uri: None,
        }
    }
}

/// Training status.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "Queued")]
    Queued,
    #[serde(rename = "InProgress")]
    InProgress,
    #[serde(rename = "Succeeded")]
    Succeeded,
    #[serde(rename = "Failed")]
    Failed,
}

impl Default for Status {
    fn default() -> Status {
        Self::Queued
    }
}
/// State of the Trained Documents, which can be one of these Draft, Active, Discarded, Archived.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum KnowledgeDocumentsState {
    #[serde(rename = "Draft")]
    Draft,
    #[serde(rename = "Active")]
    Active,
    #[serde(rename = "Discarded")]
    Discarded,
    #[serde(rename = "Archived")]
    Archived,
}

impl Default for KnowledgeDocumentsState {
    fn default() -> KnowledgeDocumentsState {
        Self::Draft
    }
}

