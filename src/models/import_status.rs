/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ImportStatus {
    /// current status of the import
    #[serde(rename = "state")]
    pub state: State,
    /// total number of records to be imported
    #[serde(rename = "totalRecords")]
    pub total_records: i64,
    /// number of records finished importing
    #[serde(rename = "completedRecords")]
    pub completed_records: i64,
    /// percentage of records finished importing
    #[serde(rename = "percentComplete")]
    pub percent_complete: i32,
    /// if the import has failed, the reason for the failure
    #[serde(rename = "failureReason", skip_serializing_if = "Option::is_none")]
    pub failure_reason: Option<String>,
}

impl ImportStatus {
    pub fn new(state: State, total_records: i64, completed_records: i64, percent_complete: i32) -> ImportStatus {
        ImportStatus {
            state,
            total_records,
            completed_records,
            percent_complete,
            failure_reason: None,
        }
    }
}

/// current status of the import
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "IN_PROGRESS")]
    INPROGRESS,
    #[serde(rename = "FAILED")]
    FAILED,
}

impl Default for State {
    fn default() -> State {
        Self::INPROGRESS
    }
}

