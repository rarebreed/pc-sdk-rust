/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreatePerformanceProfile {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// A name for this performance profile
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "division")]
    pub division: Box<crate::models::WritableDivision>,
    /// A description about this performance profile
    #[serde(rename = "description")]
    pub description: String,
    /// Order of the associated metrics. The list should contain valid ids for metrics
    #[serde(rename = "metricOrders", skip_serializing_if = "Option::is_none")]
    pub metric_orders: Option<Vec<String>>,
    /// Creation date for this performance profile. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// The reporting interval periods for this performance profile
    #[serde(rename = "reportingIntervals")]
    pub reporting_intervals: Vec<crate::models::ReportingInterval>,
    /// The flag for active profiles
    #[serde(rename = "active")]
    pub active: bool,
    /// The number of members in this performance profile
    #[serde(rename = "memberCount", skip_serializing_if = "Option::is_none")]
    pub member_count: Option<i32>,
    /// The maximum rank size for the leaderboard. This counts the number of ranks can be retrieved in a leaderboard queries
    #[serde(rename = "maxLeaderboardRankSize")]
    pub max_leaderboard_rank_size: i32,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl CreatePerformanceProfile {
    pub fn new(name: String, division: crate::models::WritableDivision, description: String, reporting_intervals: Vec<crate::models::ReportingInterval>, active: bool, max_leaderboard_rank_size: i32) -> CreatePerformanceProfile {
        CreatePerformanceProfile {
            id: None,
            name,
            division: Box::new(division),
            description,
            metric_orders: None,
            date_created: None,
            reporting_intervals,
            active,
            member_count: None,
            max_leaderboard_rank_size,
            self_uri: None,
        }
    }
}


