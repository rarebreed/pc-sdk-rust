/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateWebChatConversationRequest {
    /// The organization identifier.
    #[serde(rename = "organizationId")]
    pub organization_id: String,
    /// The web chat Deployment ID which contains the appropriate settings for this chat conversation.
    #[serde(rename = "deploymentId")]
    pub deployment_id: String,
    #[serde(rename = "routingTarget")]
    pub routing_target: Box<crate::models::WebChatRoutingTarget>,
    #[serde(rename = "memberInfo")]
    pub member_info: Box<crate::models::GuestMemberInfo>,
    /// If the guest member is an authenticated member (ie, not anonymous) his JWT is provided here. The token will have been previously generated with the \"POST /api/v2/signeddata\" resource.
    #[serde(rename = "memberAuthToken", skip_serializing_if = "Option::is_none")]
    pub member_auth_token: Option<String>,
    #[serde(rename = "journeyContext", skip_serializing_if = "Option::is_none")]
    pub journey_context: Option<Box<crate::models::JourneyContext>>,
}

impl CreateWebChatConversationRequest {
    pub fn new(organization_id: String, deployment_id: String, routing_target: crate::models::WebChatRoutingTarget, member_info: crate::models::GuestMemberInfo) -> CreateWebChatConversationRequest {
        CreateWebChatConversationRequest {
            organization_id,
            deployment_id,
            routing_target: Box::new(routing_target),
            member_info: Box::new(member_info),
            member_auth_token: None,
            journey_context: None,
        }
    }
}


