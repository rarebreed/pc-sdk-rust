/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Schema {
    /// A core type's title
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// A core type's description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// An array of fundamental JSON Schema primitive types on which the core type is based
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Vec<String>>,
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Box<crate::models::Items>>,
    /// For the \"date\" and \"datetime\" core types, denotes the regex prescribing the allowable date/datetime format
    #[serde(rename = "pattern", skip_serializing_if = "Option::is_none")]
    pub pattern: Option<String>,
}

impl Schema {
    pub fn new() -> Schema {
        Schema {
            title: None,
            description: None,
            _type: None,
            items: None,
            pattern: None,
        }
    }
}


