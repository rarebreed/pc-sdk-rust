/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// UcIntegration : UC Integration UI configuration data



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UcIntegration {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// ucIntegrationKey
    #[serde(rename = "ucIntegrationKey")]
    pub uc_integration_key: String,
    /// integrationPresenceType
    #[serde(rename = "integrationPresenceSource")]
    pub integration_presence_source: IntegrationPresenceSource,
    /// pbxPermission
    #[serde(rename = "pbxPermission")]
    pub pbx_permission: String,
    #[serde(rename = "icon")]
    pub icon: Box<crate::models::UcIcon>,
    /// i10n
    #[serde(rename = "i10n")]
    pub i10n: ::std::collections::HashMap<String, crate::models::Uci10n>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl UcIntegration {
    /// UC Integration UI configuration data
    pub fn new(uc_integration_key: String, integration_presence_source: IntegrationPresenceSource, pbx_permission: String, icon: crate::models::UcIcon, i10n: ::std::collections::HashMap<String, crate::models::Uci10n>) -> UcIntegration {
        UcIntegration {
            id: None,
            name: None,
            uc_integration_key,
            integration_presence_source,
            pbx_permission,
            icon: Box::new(icon),
            i10n,
            self_uri: None,
        }
    }
}

/// integrationPresenceType
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IntegrationPresenceSource {
    #[serde(rename = "MicrosoftTeams")]
    MicrosoftTeams,
    #[serde(rename = "ZoomPhone")]
    ZoomPhone,
    #[serde(rename = "RingCentral")]
    RingCentral,
}

impl Default for IntegrationPresenceSource {
    fn default() -> IntegrationPresenceSource {
        Self::MicrosoftTeams
    }
}

