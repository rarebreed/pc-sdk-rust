/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BuIntradayDataGroup {
    /// The media type associated with this intraday group
    #[serde(rename = "mediaType", skip_serializing_if = "Option::is_none")]
    pub media_type: Option<MediaType>,
    #[serde(rename = "forecastDataSummary", skip_serializing_if = "Option::is_none")]
    pub forecast_data_summary: Option<Box<crate::models::BuIntradayForecastData>>,
    /// Forecast data per interval for this date range
    #[serde(rename = "forecastDataPerInterval", skip_serializing_if = "Option::is_none")]
    pub forecast_data_per_interval: Option<Vec<crate::models::BuIntradayForecastData>>,
    #[serde(rename = "scheduleDataSummary", skip_serializing_if = "Option::is_none")]
    pub schedule_data_summary: Option<Box<crate::models::BuIntradayScheduleData>>,
    /// Schedule data per interval for this date range
    #[serde(rename = "scheduleDataPerInterval", skip_serializing_if = "Option::is_none")]
    pub schedule_data_per_interval: Option<Vec<crate::models::BuIntradayScheduleData>>,
    #[serde(rename = "performancePredictionDataSummary", skip_serializing_if = "Option::is_none")]
    pub performance_prediction_data_summary: Option<Box<crate::models::IntradayPerformancePredictionData>>,
    /// Performance prediction data per interval for this date range
    #[serde(rename = "performancePredictionDataPerInterval", skip_serializing_if = "Option::is_none")]
    pub performance_prediction_data_per_interval: Option<Vec<crate::models::IntradayPerformancePredictionData>>,
}

impl BuIntradayDataGroup {
    pub fn new() -> BuIntradayDataGroup {
        BuIntradayDataGroup {
            media_type: None,
            forecast_data_summary: None,
            forecast_data_per_interval: None,
            schedule_data_summary: None,
            schedule_data_per_interval: None,
            performance_prediction_data_summary: None,
            performance_prediction_data_per_interval: None,
        }
    }
}

/// The media type associated with this intraday group
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MediaType {
    #[serde(rename = "Voice")]
    Voice,
    #[serde(rename = "Chat")]
    Chat,
    #[serde(rename = "Email")]
    Email,
    #[serde(rename = "Callback")]
    Callback,
    #[serde(rename = "Message")]
    Message,
}

impl Default for MediaType {
    fn default() -> MediaType {
        Self::Voice
    }
}

