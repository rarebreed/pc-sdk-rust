/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TtsVoiceEntity {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The gender of the TTS voice
    #[serde(rename = "gender")]
    pub gender: String,
    /// The language supported by the TTS voice
    #[serde(rename = "language")]
    pub language: String,
    #[serde(rename = "engine")]
    pub engine: Box<crate::models::TtsEngineEntity>,
    /// The voice is the default voice for its language
    #[serde(rename = "isDefault", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<bool>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl TtsVoiceEntity {
    pub fn new(gender: String, language: String, engine: crate::models::TtsEngineEntity) -> TtsVoiceEntity {
        TtsVoiceEntity {
            id: None,
            name: None,
            gender,
            language,
            engine: Box::new(engine),
            is_default: None,
            self_uri: None,
        }
    }
}


