/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RoutePathRequest {
    /// The ID of the queue to associate with the route path
    #[serde(rename = "queueId")]
    pub queue_id: String,
    /// The media type of the given queue to associate with the route path
    #[serde(rename = "mediaType")]
    pub media_type: MediaType,
    /// The ID of the language to associate with the route path
    #[serde(rename = "languageId", skip_serializing_if = "Option::is_none")]
    pub language_id: Option<String>,
    /// The set of skill IDs to associate with the route path
    #[serde(rename = "skillIds", skip_serializing_if = "Option::is_none")]
    pub skill_ids: Option<Vec<String>>,
    #[serde(rename = "sourcePlanningGroup", skip_serializing_if = "Option::is_none")]
    pub source_planning_group: Option<Box<crate::models::SourcePlanningGroupRequest>>,
}

impl RoutePathRequest {
    pub fn new(queue_id: String, media_type: MediaType) -> RoutePathRequest {
        RoutePathRequest {
            queue_id,
            media_type,
            language_id: None,
            skill_ids: None,
            source_planning_group: None,
        }
    }
}

/// The media type of the given queue to associate with the route path
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MediaType {
    #[serde(rename = "Voice")]
    Voice,
    #[serde(rename = "Chat")]
    Chat,
    #[serde(rename = "Email")]
    Email,
    #[serde(rename = "Callback")]
    Callback,
    #[serde(rename = "Message")]
    Message,
}

impl Default for MediaType {
    fn default() -> MediaType {
        Self::Voice
    }
}

