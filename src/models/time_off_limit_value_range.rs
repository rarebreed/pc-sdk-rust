/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// TimeOffLimitValueRange : The date range with lists of time off limit, allocated and waitlisted minutes.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TimeOffLimitValueRange {
    #[serde(rename = "timeOffLimit", skip_serializing_if = "Option::is_none")]
    pub time_off_limit: Option<Box<crate::models::TimeOffLimitReference>>,
    /// Start date of the requested date range, in ISO-8601 format. The end date is determined by the size of interval lists
    #[serde(rename = "startDate")]
    pub start_date: String,
    /// Granularity choice for time off limit
    #[serde(rename = "granularity")]
    pub granularity: Granularity,
    /// A list of time off limit values in minutes per granularity interval
    #[serde(rename = "limitMinutesPerInterval", skip_serializing_if = "Option::is_none")]
    pub limit_minutes_per_interval: Option<Vec<i32>>,
    /// A list of allocated time off minutes per granularity interval
    #[serde(rename = "allocatedMinutesPerInterval", skip_serializing_if = "Option::is_none")]
    pub allocated_minutes_per_interval: Option<Vec<i32>>,
    /// A list of waitlisted time off minutes per granularity interval
    #[serde(rename = "waitlistedMinutesPerInterval", skip_serializing_if = "Option::is_none")]
    pub waitlisted_minutes_per_interval: Option<Vec<i32>>,
    /// The current number of waitlisted time off requests for every interval per granularity
    #[serde(rename = "waitlistedRequestsPerInterval", skip_serializing_if = "Option::is_none")]
    pub waitlisted_requests_per_interval: Option<Vec<i32>>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::WfmVersionedEntityMetadata>>,
}

impl TimeOffLimitValueRange {
    /// The date range with lists of time off limit, allocated and waitlisted minutes.
    pub fn new(start_date: String, granularity: Granularity) -> TimeOffLimitValueRange {
        TimeOffLimitValueRange {
            time_off_limit: None,
            start_date,
            granularity,
            limit_minutes_per_interval: None,
            allocated_minutes_per_interval: None,
            waitlisted_minutes_per_interval: None,
            waitlisted_requests_per_interval: None,
            metadata: None,
        }
    }
}

/// Granularity choice for time off limit
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Granularity {
    #[serde(rename = "Daily")]
    Daily,
}

impl Default for Granularity {
    fn default() -> Granularity {
        Self::Daily
    }
}

