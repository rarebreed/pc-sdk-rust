/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CampaignRuleCondition {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "parameters")]
    pub parameters: Box<crate::models::CampaignRuleParameters>,
    /// The type of condition to evaluate.
    #[serde(rename = "conditionType")]
    pub condition_type: ConditionType,
}

impl CampaignRuleCondition {
    pub fn new(parameters: crate::models::CampaignRuleParameters, condition_type: ConditionType) -> CampaignRuleCondition {
        CampaignRuleCondition {
            id: None,
            parameters: Box::new(parameters),
            condition_type,
        }
    }
}

/// The type of condition to evaluate.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConditionType {
    #[serde(rename = "campaignProgress")]
    CampaignProgress,
    #[serde(rename = "campaignAgents")]
    CampaignAgents,
}

impl Default for ConditionType {
    fn default() -> ConditionType {
        Self::CampaignProgress
    }
}

