/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// BusinessUnitActivityCode : Activity code data



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BusinessUnitActivityCode {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Whether this activity code is active or has been deleted
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    /// Whether this is a default activity code
    #[serde(rename = "defaultCode", skip_serializing_if = "Option::is_none")]
    pub default_code: Option<bool>,
    /// The category of the activity code
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<Category>,
    /// The default length of the activity in minutes
    #[serde(rename = "lengthInMinutes", skip_serializing_if = "Option::is_none")]
    pub length_in_minutes: Option<i32>,
    /// Whether an agent is paid while performing this activity
    #[serde(rename = "countsAsPaidTime", skip_serializing_if = "Option::is_none")]
    pub counts_as_paid_time: Option<bool>,
    /// Indicates whether or not the activity should be counted as contiguous work time for calculating daily constraints
    #[serde(rename = "countsAsWorkTime", skip_serializing_if = "Option::is_none")]
    pub counts_as_work_time: Option<bool>,
    /// Whether an agent can select this activity code when creating or editing a time off request. Null if the activity's category is not time off.
    #[serde(rename = "agentTimeOffSelectable", skip_serializing_if = "Option::is_none")]
    pub agent_time_off_selectable: Option<bool>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::WfmVersionedEntityMetadata>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl BusinessUnitActivityCode {
    /// Activity code data
    pub fn new() -> BusinessUnitActivityCode {
        BusinessUnitActivityCode {
            id: None,
            name: None,
            active: None,
            default_code: None,
            category: None,
            length_in_minutes: None,
            counts_as_paid_time: None,
            counts_as_work_time: None,
            agent_time_off_selectable: None,
            metadata: None,
            self_uri: None,
        }
    }
}

/// The category of the activity code
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Category {
    #[serde(rename = "OnQueueWork")]
    OnQueueWork,
    #[serde(rename = "Break")]
    _Break,
    #[serde(rename = "Meal")]
    Meal,
    #[serde(rename = "Meeting")]
    Meeting,
    #[serde(rename = "OffQueueWork")]
    OffQueueWork,
    #[serde(rename = "TimeOff")]
    TimeOff,
    #[serde(rename = "Training")]
    Training,
    #[serde(rename = "Unavailable")]
    Unavailable,
    #[serde(rename = "Unscheduled")]
    Unscheduled,
}

impl Default for Category {
    fn default() -> Category {
        Self::OnQueueWork
    }
}

