/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FacebookIntegrationRequest {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The name of the Facebook Integration
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "supportedContent", skip_serializing_if = "Option::is_none")]
    pub supported_content: Option<Box<crate::models::SupportedContentReference>>,
    /// The long-lived Page Access Token of Facebook page.  See https://developers.facebook.com/docs/facebook-login/access-tokens.  When a pageAccessToken is provided, pageId and userAccessToken are not required.
    #[serde(rename = "pageAccessToken", skip_serializing_if = "Option::is_none")]
    pub page_access_token: Option<String>,
    /// The short-lived User Access Token of the Facebook user logged into the Facebook app.  See https://developers.facebook.com/docs/facebook-login/access-tokens.  When userAccessToken is provided, pageId is mandatory.  When userAccessToken/pageId combination is provided, pageAccessToken is not required.
    #[serde(rename = "userAccessToken", skip_serializing_if = "Option::is_none")]
    pub user_access_token: Option<String>,
    /// The page Id of Facebook page. The pageId is required when userAccessToken is provided.
    #[serde(rename = "pageId", skip_serializing_if = "Option::is_none")]
    pub page_id: Option<String>,
    /// The app Id of Facebook app. The appId is required when a customer wants to use their own approved Facebook app.
    #[serde(rename = "appId", skip_serializing_if = "Option::is_none")]
    pub app_id: Option<String>,
    /// The app Secret of Facebook app. The appSecret is required when appId is provided.
    #[serde(rename = "appSecret", skip_serializing_if = "Option::is_none")]
    pub app_secret: Option<String>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl FacebookIntegrationRequest {
    pub fn new(name: String) -> FacebookIntegrationRequest {
        FacebookIntegrationRequest {
            id: None,
            name,
            supported_content: None,
            page_access_token: None,
            user_access_token: None,
            page_id: None,
            app_id: None,
            app_secret: None,
            self_uri: None,
        }
    }
}


