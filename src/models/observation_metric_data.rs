/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ObservationMetricData {
    #[serde(rename = "metric", skip_serializing_if = "Option::is_none")]
    pub metric: Option<String>,
    #[serde(rename = "qualifier", skip_serializing_if = "Option::is_none")]
    pub qualifier: Option<String>,
    #[serde(rename = "stats", skip_serializing_if = "Option::is_none")]
    pub stats: Option<Box<crate::models::StatisticalSummary>>,
    /// Flag for a truncated list of observations. If truncated, the first half of the list of observations will contain the oldest observations and the second half the newest observations.
    #[serde(rename = "truncated", skip_serializing_if = "Option::is_none")]
    pub truncated: Option<bool>,
    /// List of observations sorted by timestamp in ascending order. This list may be truncated.
    #[serde(rename = "observations", skip_serializing_if = "Option::is_none")]
    pub observations: Option<Vec<crate::models::ObservationValue>>,
}

impl ObservationMetricData {
    pub fn new() -> ObservationMetricData {
        ObservationMetricData {
            metric: None,
            qualifier: None,
            stats: None,
            truncated: None,
            observations: None,
        }
    }
}


