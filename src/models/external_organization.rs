/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ExternalOrganization {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The name of the company.
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "companyType", skip_serializing_if = "Option::is_none")]
    pub company_type: Option<String>,
    #[serde(rename = "industry", skip_serializing_if = "Option::is_none")]
    pub industry: Option<String>,
    #[serde(rename = "primaryContactId", skip_serializing_if = "Option::is_none")]
    pub primary_contact_id: Option<String>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<Box<crate::models::ContactAddress>>,
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<Box<crate::models::PhoneNumber>>,
    #[serde(rename = "faxNumber", skip_serializing_if = "Option::is_none")]
    pub fax_number: Option<Box<crate::models::PhoneNumber>>,
    #[serde(rename = "employeeCount", skip_serializing_if = "Option::is_none")]
    pub employee_count: Option<i64>,
    #[serde(rename = "revenue", skip_serializing_if = "Option::is_none")]
    pub revenue: Option<i64>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "websites", skip_serializing_if = "Option::is_none")]
    pub websites: Option<Vec<String>>,
    #[serde(rename = "tickers", skip_serializing_if = "Option::is_none")]
    pub tickers: Option<Vec<crate::models::Ticker>>,
    #[serde(rename = "twitterId", skip_serializing_if = "Option::is_none")]
    pub twitter_id: Option<Box<crate::models::TwitterId>>,
    /// A string that identifies an external system-of-record resource that may have more detailed information on the organization. It should be a valid URL (including the http/https protocol, port, and path [if any]). The value is automatically trimmed of any leading and trailing whitespace.
    #[serde(rename = "externalSystemUrl", skip_serializing_if = "Option::is_none")]
    pub external_system_url: Option<String>,
    /// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "modifyDate", skip_serializing_if = "Option::is_none")]
    pub modify_date: Option<String>,
    /// Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "createDate", skip_serializing_if = "Option::is_none")]
    pub create_date: Option<String>,
    #[serde(rename = "trustor", skip_serializing_if = "Option::is_none")]
    pub trustor: Option<Box<crate::models::Trustor>>,
    #[serde(rename = "schema", skip_serializing_if = "Option::is_none")]
    pub schema: Option<Box<crate::models::DataSchema>>,
    /// Custom fields defined in the schema referenced by schemaId and schemaVersion.
    #[serde(rename = "customFields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<::std::collections::HashMap<String, serde_json::Value>>,
    /// Links to the sources of data (e.g. one source might be a CRM) that contributed data to this record.  Read-only, and only populated when requested via expand param.
    #[serde(rename = "externalDataSources", skip_serializing_if = "Option::is_none")]
    pub external_data_sources: Option<Vec<crate::models::ExternalDataSource>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl ExternalOrganization {
    pub fn new(name: String) -> ExternalOrganization {
        ExternalOrganization {
            id: None,
            name,
            company_type: None,
            industry: None,
            primary_contact_id: None,
            address: None,
            phone_number: None,
            fax_number: None,
            employee_count: None,
            revenue: None,
            tags: None,
            websites: None,
            tickers: None,
            twitter_id: None,
            external_system_url: None,
            modify_date: None,
            create_date: None,
            trustor: None,
            schema: None,
            custom_fields: None,
            external_data_sources: None,
            self_uri: None,
        }
    }
}


