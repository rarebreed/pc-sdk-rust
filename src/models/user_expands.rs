/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UserExpands {
    #[serde(rename = "routingStatus", skip_serializing_if = "Option::is_none")]
    pub routing_status: Option<Box<crate::models::RoutingStatus>>,
    #[serde(rename = "presence", skip_serializing_if = "Option::is_none")]
    pub presence: Option<Box<crate::models::UserPresence>>,
    #[serde(rename = "integrationPresence", skip_serializing_if = "Option::is_none")]
    pub integration_presence: Option<Box<crate::models::UserPresence>>,
    #[serde(rename = "conversationSummary", skip_serializing_if = "Option::is_none")]
    pub conversation_summary: Option<Box<crate::models::UserConversationSummary>>,
    #[serde(rename = "outOfOffice", skip_serializing_if = "Option::is_none")]
    pub out_of_office: Option<Box<crate::models::OutOfOffice>>,
    #[serde(rename = "geolocation", skip_serializing_if = "Option::is_none")]
    pub geolocation: Option<Box<crate::models::Geolocation>>,
    #[serde(rename = "station", skip_serializing_if = "Option::is_none")]
    pub station: Option<Box<crate::models::UserStations>>,
    #[serde(rename = "authorization", skip_serializing_if = "Option::is_none")]
    pub authorization: Option<Box<crate::models::UserAuthorization>>,
}

impl UserExpands {
    pub fn new() -> UserExpands {
        UserExpands {
            routing_status: None,
            presence: None,
            integration_presence: None,
            conversation_summary: None,
            out_of_office: None,
            geolocation: None,
            station: None,
            authorization: None,
        }
    }
}


