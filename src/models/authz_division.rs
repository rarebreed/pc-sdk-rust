/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AuthzDivision {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// A helpful description for the division.
    #[serde(rename = "description")]
    pub description: String,
    /// A flag indicating whether this division is the \"Home\" (default) division. Cannot be modified and any supplied value will be ignored on create or update.
    #[serde(rename = "homeDivision", skip_serializing_if = "Option::is_none")]
    pub home_division: Option<bool>,
    /// A count of objects in this division, grouped by type.
    #[serde(rename = "objectCounts", skip_serializing_if = "Option::is_none")]
    pub object_counts: Option<::std::collections::HashMap<String, i64>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl AuthzDivision {
    pub fn new(description: String) -> AuthzDivision {
        AuthzDivision {
            id: None,
            name: None,
            description,
            home_division: None,
            object_counts: None,
            self_uri: None,
        }
    }
}


