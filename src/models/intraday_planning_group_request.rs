/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IntradayPlanningGroupRequest {
    /// Requested date in yyyy-MM-dd format. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
    #[serde(rename = "businessUnitDate")]
    pub business_unit_date: String,
    /// The metric categories
    #[serde(rename = "categories")]
    pub categories: Vec<Categories>,
    /// The IDs of the planning groups for which to fetch data.  Omitting or passing an empty list will return all available planning groups
    #[serde(rename = "planningGroupIds", skip_serializing_if = "Option::is_none")]
    pub planning_group_ids: Option<Vec<String>>,
    /// The period/interval in minutes for which to aggregate the data. Required, defaults to 15
    #[serde(rename = "intervalLengthMinutes", skip_serializing_if = "Option::is_none")]
    pub interval_length_minutes: Option<i32>,
}

impl IntradayPlanningGroupRequest {
    pub fn new(business_unit_date: String, categories: Vec<Categories>) -> IntradayPlanningGroupRequest {
        IntradayPlanningGroupRequest {
            business_unit_date,
            categories,
            planning_group_ids: None,
            interval_length_minutes: None,
        }
    }
}

/// The metric categories
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Categories {
    #[serde(rename = "ForecastData")]
    ForecastData,
    #[serde(rename = "ScheduleData")]
    ScheduleData,
    #[serde(rename = "PerformancePredictionData")]
    PerformancePredictionData,
}

impl Default for Categories {
    fn default() -> Categories {
        Self::ForecastData
    }
}

