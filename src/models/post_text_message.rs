/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostTextMessage {
    /// Message type
    #[serde(rename = "type")]
    pub _type: Type,
    /// Message text. If type is structured, used as fallback for clients that do not support particular structured content
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
    /// A list of content elements in message
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<Vec<crate::models::MessageContent>>,
}

impl PostTextMessage {
    pub fn new(_type: Type) -> PostTextMessage {
        PostTextMessage {
            _type,
            text: None,
            content: None,
        }
    }
}

/// Message type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Text")]
    Text,
    #[serde(rename = "Structured")]
    Structured,
    #[serde(rename = "Receipt")]
    Receipt,
}

impl Default for Type {
    fn default() -> Type {
        Self::Text
    }
}

