/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RequestMapping {
    /// Name of the Integration Action Attribute to supply the value for
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Type of the value supplied
    #[serde(rename = "attributeType", skip_serializing_if = "Option::is_none")]
    pub attribute_type: Option<AttributeType>,
    /// Method of finding value to use with Attribute
    #[serde(rename = "mappingType", skip_serializing_if = "Option::is_none")]
    pub mapping_type: Option<MappingType>,
    /// Value to supply for the specified Attribute
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
}

impl RequestMapping {
    pub fn new() -> RequestMapping {
        RequestMapping {
            name: None,
            attribute_type: None,
            mapping_type: None,
            value: None,
        }
    }
}

/// Type of the value supplied
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AttributeType {
    #[serde(rename = "String")]
    String,
    #[serde(rename = "Number")]
    Number,
    #[serde(rename = "Integer")]
    Integer,
    #[serde(rename = "Boolean")]
    Boolean,
}

impl Default for AttributeType {
    fn default() -> AttributeType {
        Self::String
    }
}
/// Method of finding value to use with Attribute
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MappingType {
    #[serde(rename = "Lookup")]
    Lookup,
    #[serde(rename = "HardCoded")]
    HardCoded,
}

impl Default for MappingType {
    fn default() -> MappingType {
        Self::Lookup
    }
}

