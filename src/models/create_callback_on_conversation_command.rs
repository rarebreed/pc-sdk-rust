/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateCallbackOnConversationCommand {
    /// The identifier of the script to be used for the callback
    #[serde(rename = "scriptId", skip_serializing_if = "Option::is_none")]
    pub script_id: Option<String>,
    /// The identifier of the queue to be used for the callback. Either queueId or routingData is required.
    #[serde(rename = "queueId", skip_serializing_if = "Option::is_none")]
    pub queue_id: Option<String>,
    #[serde(rename = "routingData", skip_serializing_if = "Option::is_none")]
    pub routing_data: Option<Box<crate::models::RoutingData>>,
    /// The name of the party to be called back.
    #[serde(rename = "callbackUserName", skip_serializing_if = "Option::is_none")]
    pub callback_user_name: Option<String>,
    /// A list of phone numbers for the callback.
    #[serde(rename = "callbackNumbers")]
    pub callback_numbers: Vec<String>,
    /// The scheduled date-time for the callback as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss.SSSZ
    #[serde(rename = "callbackScheduledTime", skip_serializing_if = "Option::is_none")]
    pub callback_scheduled_time: Option<String>,
    /// The country code to be associated with the callback numbers.
    #[serde(rename = "countryCode", skip_serializing_if = "Option::is_none")]
    pub country_code: Option<String>,
    /// Whether or not to validate the callback numbers for phone number format.
    #[serde(rename = "validateCallbackNumbers", skip_serializing_if = "Option::is_none")]
    pub validate_callback_numbers: Option<bool>,
    /// A map of key-value pairs containing additional data that can be associated to the callback. These values will appear in the attributes property on the conversation participant. Example: { \"notes\": \"ready to close the deal!\", \"customerPreferredName\": \"Doc\" }
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<::std::collections::HashMap<String, String>>,
    /// The phone number displayed to recipients when a phone call is placed as part of the callback. Must conform to the E.164 format. May be overridden by other settings in the system such as external trunk settings. Telco support for \"callerId\" varies.
    #[serde(rename = "callerId", skip_serializing_if = "Option::is_none")]
    pub caller_id: Option<String>,
    /// The name displayed to recipients when a phone call is placed as part of the callback. May be overridden by other settings in the system such as external trunk settings. Telco support for \"callerIdName\" varies.
    #[serde(rename = "callerIdName", skip_serializing_if = "Option::is_none")]
    pub caller_id_name: Option<String>,
}

impl CreateCallbackOnConversationCommand {
    pub fn new(callback_numbers: Vec<String>) -> CreateCallbackOnConversationCommand {
        CreateCallbackOnConversationCommand {
            script_id: None,
            queue_id: None,
            routing_data: None,
            callback_user_name: None,
            callback_numbers,
            callback_scheduled_time: None,
            country_code: None,
            validate_callback_numbers: None,
            data: None,
            caller_id: None,
            caller_id_name: None,
        }
    }
}


