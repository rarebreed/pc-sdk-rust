/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ConversationMessagingChannel : Channel-specific information that describes the message and the message channel/provider.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConversationMessagingChannel {
    /// The integration ID.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The provider type.
    #[serde(rename = "platform", skip_serializing_if = "Option::is_none")]
    pub platform: Option<Platform>,
    /// Unique provider ID of the message such as a Facebook message ID.
    #[serde(rename = "messageId", skip_serializing_if = "Option::is_none")]
    pub message_id: Option<String>,
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<Box<crate::models::ConversationMessagingToRecipient>>,
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<Box<crate::models::ConversationMessagingFromRecipient>>,
    /// Original time of the event. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<String>,
    /// Time the message was edited. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    /// Time the message was deleted. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateDeleted", skip_serializing_if = "Option::is_none")]
    pub date_deleted: Option<String>,
}

impl ConversationMessagingChannel {
    /// Channel-specific information that describes the message and the message channel/provider.
    pub fn new() -> ConversationMessagingChannel {
        ConversationMessagingChannel {
            id: None,
            platform: None,
            message_id: None,
            to: None,
            from: None,
            time: None,
            date_modified: None,
            date_deleted: None,
        }
    }
}

/// The provider type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Platform {
    #[serde(rename = "Twitter")]
    Twitter,
    #[serde(rename = "Facebook")]
    Facebook,
    #[serde(rename = "Instagram")]
    Instagram,
    #[serde(rename = "Line")]
    Line,
    #[serde(rename = "Whatsapp")]
    Whatsapp,
    #[serde(rename = "WebMessaging")]
    WebMessaging,
    #[serde(rename = "Open")]
    Open,
    #[serde(rename = "Sms")]
    Sms,
}

impl Default for Platform {
    fn default() -> Platform {
        Self::Twitter
    }
}

