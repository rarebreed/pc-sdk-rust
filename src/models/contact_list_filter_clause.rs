/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ContactListFilterClause {
    /// How to join predicates together.
    #[serde(rename = "filterType", skip_serializing_if = "Option::is_none")]
    pub filter_type: Option<FilterType>,
    /// Conditions to filter the contacts by.
    #[serde(rename = "predicates", skip_serializing_if = "Option::is_none")]
    pub predicates: Option<Vec<crate::models::ContactListFilterPredicate>>,
}

impl ContactListFilterClause {
    pub fn new() -> ContactListFilterClause {
        ContactListFilterClause {
            filter_type: None,
            predicates: None,
        }
    }
}

/// How to join predicates together.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FilterType {
    #[serde(rename = "AND")]
    AND,
    #[serde(rename = "OR")]
    OR,
}

impl Default for FilterType {
    fn default() -> FilterType {
        Self::AND
    }
}

