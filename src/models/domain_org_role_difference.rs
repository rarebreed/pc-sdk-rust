/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DomainOrgRoleDifference {
    #[serde(rename = "removedPermissionPolicies", skip_serializing_if = "Option::is_none")]
    pub removed_permission_policies: Option<Vec<crate::models::DomainPermissionPolicy>>,
    #[serde(rename = "addedPermissionPolicies", skip_serializing_if = "Option::is_none")]
    pub added_permission_policies: Option<Vec<crate::models::DomainPermissionPolicy>>,
    #[serde(rename = "samePermissionPolicies", skip_serializing_if = "Option::is_none")]
    pub same_permission_policies: Option<Vec<crate::models::DomainPermissionPolicy>>,
    #[serde(rename = "userOrgRole", skip_serializing_if = "Option::is_none")]
    pub user_org_role: Option<Box<crate::models::DomainOrganizationRole>>,
    #[serde(rename = "roleFromDefault", skip_serializing_if = "Option::is_none")]
    pub role_from_default: Option<Box<crate::models::DomainOrganizationRole>>,
}

impl DomainOrgRoleDifference {
    pub fn new() -> DomainOrgRoleDifference {
        DomainOrgRoleDifference {
            removed_permission_policies: None,
            added_permission_policies: None,
            same_permission_policies: None,
            user_org_role: None,
            role_from_default: None,
        }
    }
}


