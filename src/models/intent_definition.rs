/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IntentDefinition {
    /// The name of the intent.
    #[serde(rename = "name")]
    pub name: String,
    /// The bindings for the named entity types used in this intent.This field is mutually exclusive with entityNameReferences and entities
    #[serde(rename = "entityTypeBindings", skip_serializing_if = "Option::is_none")]
    pub entity_type_bindings: Option<Vec<crate::models::NamedEntityTypeBinding>>,
    /// The references for the named entity used in this intent.This field is mutually exclusive with entityTypeBindings
    #[serde(rename = "entityNameReferences", skip_serializing_if = "Option::is_none")]
    pub entity_name_references: Option<Vec<String>>,
    /// The utterances that act as training phrases for the intent.
    #[serde(rename = "utterances")]
    pub utterances: Vec<crate::models::NluUtterance>,
}

impl IntentDefinition {
    pub fn new(name: String, utterances: Vec<crate::models::NluUtterance>) -> IntentDefinition {
        IntentDefinition {
            name,
            entity_type_bindings: None,
            entity_name_references: None,
            utterances,
        }
    }
}


