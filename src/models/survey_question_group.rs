/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SurveyQuestionGroup {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    #[serde(rename = "naEnabled", skip_serializing_if = "Option::is_none")]
    pub na_enabled: Option<bool>,
    #[serde(rename = "questions", skip_serializing_if = "Option::is_none")]
    pub questions: Option<Vec<crate::models::SurveyQuestion>>,
    #[serde(rename = "visibilityCondition", skip_serializing_if = "Option::is_none")]
    pub visibility_condition: Option<Box<crate::models::VisibilityCondition>>,
}

impl SurveyQuestionGroup {
    pub fn new() -> SurveyQuestionGroup {
        SurveyQuestionGroup {
            id: None,
            name: None,
            _type: None,
            na_enabled: None,
            questions: None,
            visibility_condition: None,
        }
    }
}


