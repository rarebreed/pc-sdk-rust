/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConversationAssociation {
    /// An external contact ID.  If not supplied, implies the conversation should be disassociated with any external contact.
    #[serde(rename = "externalContactId", skip_serializing_if = "Option::is_none")]
    pub external_contact_id: Option<String>,
    /// Conversation ID
    #[serde(rename = "conversationId")]
    pub conversation_id: String,
    /// Communication ID
    #[serde(rename = "communicationId")]
    pub communication_id: String,
    /// Media type
    #[serde(rename = "mediaType")]
    pub media_type: MediaType,
}

impl ConversationAssociation {
    pub fn new(conversation_id: String, communication_id: String, media_type: MediaType) -> ConversationAssociation {
        ConversationAssociation {
            external_contact_id: None,
            conversation_id,
            communication_id,
            media_type,
        }
    }
}

/// Media type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MediaType {
    #[serde(rename = "CALL")]
    CALL,
    #[serde(rename = "CALLBACK")]
    CALLBACK,
    #[serde(rename = "CHAT")]
    CHAT,
    #[serde(rename = "COBROWSE")]
    COBROWSE,
    #[serde(rename = "EMAIL")]
    EMAIL,
    #[serde(rename = "MESSAGE")]
    MESSAGE,
    #[serde(rename = "SOCIAL_EXPRESSION")]
    SOCIALEXPRESSION,
    #[serde(rename = "VIDEO")]
    VIDEO,
    #[serde(rename = "SCREENSHARE")]
    SCREENSHARE,
}

impl Default for MediaType {
    fn default() -> MediaType {
        Self::CALL
    }
}

