/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AttemptLimits {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    /// Required for updates, must match the version number of the most recent update
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i32>,
    /// The maximum number of times a contact can be called within the resetPeriod. Required if maxAttemptsPerNumber is not defined.
    #[serde(rename = "maxAttemptsPerContact", skip_serializing_if = "Option::is_none")]
    pub max_attempts_per_contact: Option<i32>,
    /// The maximum number of times a phone number can be called within the resetPeriod. Required if maxAttemptsPerContact is not defined.
    #[serde(rename = "maxAttemptsPerNumber", skip_serializing_if = "Option::is_none")]
    pub max_attempts_per_number: Option<i32>,
    /// If the resetPeriod is TODAY, this specifies the timezone in which TODAY occurs. Required if the resetPeriod is TODAY.
    #[serde(rename = "timeZoneId", skip_serializing_if = "Option::is_none")]
    pub time_zone_id: Option<String>,
    /// After how long the number of attempts will be set back to 0. Defaults to NEVER.
    #[serde(rename = "resetPeriod", skip_serializing_if = "Option::is_none")]
    pub reset_period: Option<ResetPeriod>,
    /// Configuration for recall attempts.
    #[serde(rename = "recallEntries", skip_serializing_if = "Option::is_none")]
    pub recall_entries: Option<::std::collections::HashMap<String, crate::models::RecallEntry>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl AttemptLimits {
    pub fn new() -> AttemptLimits {
        AttemptLimits {
            id: None,
            name: None,
            date_created: None,
            date_modified: None,
            version: None,
            max_attempts_per_contact: None,
            max_attempts_per_number: None,
            time_zone_id: None,
            reset_period: None,
            recall_entries: None,
            self_uri: None,
        }
    }
}

/// After how long the number of attempts will be set back to 0. Defaults to NEVER.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ResetPeriod {
    #[serde(rename = "NEVER")]
    NEVER,
    #[serde(rename = "TODAY")]
    TODAY,
}

impl Default for ResetPeriod {
    fn default() -> ResetPeriod {
        Self::NEVER
    }
}

