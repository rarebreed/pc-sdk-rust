/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ContactListDivisionView {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "division", skip_serializing_if = "Option::is_none")]
    pub division: Option<Box<crate::models::Division>>,
    /// The names of the contact data columns.
    #[serde(rename = "columnNames")]
    pub column_names: Vec<String>,
    /// Indicates which columns are phone numbers.
    #[serde(rename = "phoneColumns", skip_serializing_if = "Option::is_none")]
    pub phone_columns: Option<Vec<crate::models::ContactPhoneNumberColumn>>,
    #[serde(rename = "importStatus", skip_serializing_if = "Option::is_none")]
    pub import_status: Option<Box<crate::models::ImportStatus>>,
    /// The number of contacts in the ContactList.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl ContactListDivisionView {
    pub fn new(column_names: Vec<String>) -> ContactListDivisionView {
        ContactListDivisionView {
            id: None,
            name: None,
            division: None,
            column_names,
            phone_columns: None,
            import_status: None,
            size: None,
            self_uri: None,
        }
    }
}


