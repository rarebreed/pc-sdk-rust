/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// ConversationAppSettings : Conversation settings that handles chats within the messenger



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConversationAppSettings {
    /// The toggle to enable or disable typing indicator for messenger
    #[serde(rename = "showAgentTypingIndicator", skip_serializing_if = "Option::is_none")]
    pub show_agent_typing_indicator: Option<bool>,
    /// The toggle to enable or disable typing indicator for messenger
    #[serde(rename = "showUserTypingIndicator", skip_serializing_if = "Option::is_none")]
    pub show_user_typing_indicator: Option<bool>,
    /// The auto start type for the messenger conversation
    #[serde(rename = "autoStartType", skip_serializing_if = "Option::is_none")]
    pub auto_start_type: Option<AutoStartType>,
}

impl ConversationAppSettings {
    /// Conversation settings that handles chats within the messenger
    pub fn new() -> ConversationAppSettings {
        ConversationAppSettings {
            show_agent_typing_indicator: None,
            show_user_typing_indicator: None,
            auto_start_type: None,
        }
    }
}

/// The auto start type for the messenger conversation
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AutoStartType {
    #[serde(rename = "Standard")]
    Standard,
    #[serde(rename = "Automatic")]
    Automatic,
}

impl Default for AutoStartType {
    fn default() -> AutoStartType {
        Self::Standard
    }
}

