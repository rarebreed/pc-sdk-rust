/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ReportingExportJobRequest {
    /// The user supplied name of the export request
    #[serde(rename = "name")]
    pub name: String,
    /// The requested timezone of the exported data. Time zones are represented as a string of the zone name as found in the IANA time zone database. For example: UTC, Etc/UTC, or Europe/London
    #[serde(rename = "timeZone")]
    pub time_zone: String,
    /// The requested format of the exported data
    #[serde(rename = "exportFormat")]
    pub export_format: ExportFormat,
    /// The time period used to limit the the exported data. Intervals are represented as an ISO-8601 string. For example: YYYY-MM-DDThh:mm:ss/YYYY-MM-DDThh:mm:ss
    #[serde(rename = "interval")]
    pub interval: String,
    /// The Period of the request in which to break down the intervals. Periods are represented as an ISO-8601 string. For example: P1D or P1DT12H
    #[serde(rename = "period")]
    pub period: String,
    /// The type of view export job to be created
    #[serde(rename = "viewType")]
    pub view_type: ViewType,
    #[serde(rename = "filter")]
    pub filter: Box<crate::models::ViewFilter>,
    /// Indicates if the request has been marked as read
    #[serde(rename = "read", skip_serializing_if = "Option::is_none")]
    pub read: Option<bool>,
    /// The locale use for localization of the exported data, i.e. en-us, es-mx  
    #[serde(rename = "locale")]
    pub locale: String,
    /// Indicates if durations are formatted in hh:mm:ss format instead of ms
    #[serde(rename = "hasFormatDurations", skip_serializing_if = "Option::is_none")]
    pub has_format_durations: Option<bool>,
    /// Indicates if filters will be split in aggregate detail exports
    #[serde(rename = "hasSplitFilters", skip_serializing_if = "Option::is_none")]
    pub has_split_filters: Option<bool>,
    /// Excludes empty rows from the exports
    #[serde(rename = "excludeEmptyRows", skip_serializing_if = "Option::is_none")]
    pub exclude_empty_rows: Option<bool>,
    /// Indicates if media type will be split in aggregate detail exports
    #[serde(rename = "hasSplitByMedia", skip_serializing_if = "Option::is_none")]
    pub has_split_by_media: Option<bool>,
    /// Indicates if summary row needs to be present in exports
    #[serde(rename = "hasSummaryRow", skip_serializing_if = "Option::is_none")]
    pub has_summary_row: Option<bool>,
    /// The user supplied csv delimiter string value either of type 'comma' or 'semicolon' permitted for the export request
    #[serde(rename = "csvDelimiter", skip_serializing_if = "Option::is_none")]
    pub csv_delimiter: Option<CsvDelimiter>,
    /// The list of ordered selected columns from the export view by the user
    #[serde(rename = "selectedColumns", skip_serializing_if = "Option::is_none")]
    pub selected_columns: Option<Vec<crate::models::SelectedColumns>>,
    /// Indicates if custom participant attributes will be exported
    #[serde(rename = "hasCustomParticipantAttributes", skip_serializing_if = "Option::is_none")]
    pub has_custom_participant_attributes: Option<bool>,
    /// The list of email recipients for the exports
    #[serde(rename = "recipientEmails", skip_serializing_if = "Option::is_none")]
    pub recipient_emails: Option<Vec<String>>,
}

impl ReportingExportJobRequest {
    pub fn new(name: String, time_zone: String, export_format: ExportFormat, interval: String, period: String, view_type: ViewType, filter: crate::models::ViewFilter, locale: String) -> ReportingExportJobRequest {
        ReportingExportJobRequest {
            name,
            time_zone,
            export_format,
            interval,
            period,
            view_type,
            filter: Box::new(filter),
            read: None,
            locale,
            has_format_durations: None,
            has_split_filters: None,
            exclude_empty_rows: None,
            has_split_by_media: None,
            has_summary_row: None,
            csv_delimiter: None,
            selected_columns: None,
            has_custom_participant_attributes: None,
            recipient_emails: None,
        }
    }
}

/// The requested format of the exported data
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ExportFormat {
    #[serde(rename = "CSV")]
    CSV,
    #[serde(rename = "PDF")]
    PDF,
}

impl Default for ExportFormat {
    fn default() -> ExportFormat {
        Self::CSV
    }
}
/// The type of view export job to be created
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ViewType {
    #[serde(rename = "QUEUE_PERFORMANCE_SUMMARY_VIEW")]
    QUEUEPERFORMANCESUMMARYVIEW,
    #[serde(rename = "QUEUE_PERFORMANCE_DETAIL_VIEW")]
    QUEUEPERFORMANCEDETAILVIEW,
    #[serde(rename = "INTERACTION_SEARCH_VIEW")]
    INTERACTIONSEARCHVIEW,
    #[serde(rename = "AGENT_PERFORMANCE_SUMMARY_VIEW")]
    AGENTPERFORMANCESUMMARYVIEW,
    #[serde(rename = "AGENT_PERFORMANCE_DETAIL_VIEW")]
    AGENTPERFORMANCEDETAILVIEW,
    #[serde(rename = "AGENT_STATUS_SUMMARY_VIEW")]
    AGENTSTATUSSUMMARYVIEW,
    #[serde(rename = "AGENT_STATUS_DETAIL_VIEW")]
    AGENTSTATUSDETAILVIEW,
    #[serde(rename = "AGENT_EVALUATION_SUMMARY_VIEW")]
    AGENTEVALUATIONSUMMARYVIEW,
    #[serde(rename = "AGENT_EVALUATION_DETAIL_VIEW")]
    AGENTEVALUATIONDETAILVIEW,
    #[serde(rename = "AGENT_QUEUE_DETAIL_VIEW")]
    AGENTQUEUEDETAILVIEW,
    #[serde(rename = "AGENT_INTERACTION_DETAIL_VIEW")]
    AGENTINTERACTIONDETAILVIEW,
    #[serde(rename = "ABANDON_INSIGHTS_VIEW")]
    ABANDONINSIGHTSVIEW,
    #[serde(rename = "SKILLS_PERFORMANCE_VIEW")]
    SKILLSPERFORMANCEVIEW,
    #[serde(rename = "SURVEY_FORM_PERFORMANCE_SUMMARY_VIEW")]
    SURVEYFORMPERFORMANCESUMMARYVIEW,
    #[serde(rename = "SURVEY_FORM_PERFORMANCE_DETAIL_VIEW")]
    SURVEYFORMPERFORMANCEDETAILVIEW,
    #[serde(rename = "DNIS_PERFORMANCE_SUMMARY_VIEW")]
    DNISPERFORMANCESUMMARYVIEW,
    #[serde(rename = "DNIS_PERFORMANCE_DETAIL_VIEW")]
    DNISPERFORMANCEDETAILVIEW,
    #[serde(rename = "WRAP_UP_PERFORMANCE_SUMMARY_VIEW")]
    WRAPUPPERFORMANCESUMMARYVIEW,
    #[serde(rename = "AGENT_WRAP_UP_PERFORMANCE_DETAIL_VIEW")]
    AGENTWRAPUPPERFORMANCEDETAILVIEW,
    #[serde(rename = "QUEUE_ACTIVITY_SUMMARY_VIEW")]
    QUEUEACTIVITYSUMMARYVIEW,
    #[serde(rename = "QUEUE_ACTIVITY_DETAIL_VIEW")]
    QUEUEACTIVITYDETAILVIEW,
    #[serde(rename = "AGENT_QUEUE_ACTIVITY_SUMMARY_VIEW")]
    AGENTQUEUEACTIVITYSUMMARYVIEW,
    #[serde(rename = "QUEUE_AGENT_DETAIL_VIEW")]
    QUEUEAGENTDETAILVIEW,
    #[serde(rename = "QUEUE_INTERACTION_DETAIL_VIEW")]
    QUEUEINTERACTIONDETAILVIEW,
    #[serde(rename = "AGENT_SCHEDULE_DETAIL_VIEW")]
    AGENTSCHEDULEDETAILVIEW,
    #[serde(rename = "IVR_PERFORMANCE_SUMMARY_VIEW")]
    IVRPERFORMANCESUMMARYVIEW,
    #[serde(rename = "IVR_PERFORMANCE_DETAIL_VIEW")]
    IVRPERFORMANCEDETAILVIEW,
    #[serde(rename = "ANSWER_INSIGHTS_VIEW")]
    ANSWERINSIGHTSVIEW,
    #[serde(rename = "HANDLE_INSIGHTS_VIEW")]
    HANDLEINSIGHTSVIEW,
    #[serde(rename = "TALK_INSIGHTS_VIEW")]
    TALKINSIGHTSVIEW,
    #[serde(rename = "HOLD_INSIGHTS_VIEW")]
    HOLDINSIGHTSVIEW,
    #[serde(rename = "ACW_INSIGHTS_VIEW")]
    ACWINSIGHTSVIEW,
    #[serde(rename = "WAIT_INSIGHTS_VIEW")]
    WAITINSIGHTSVIEW,
    #[serde(rename = "AGENT_WRAP_UP_PERFORMANCE_INTERVAL_DETAIL_VIEW")]
    AGENTWRAPUPPERFORMANCEINTERVALDETAILVIEW,
    #[serde(rename = "FLOW_OUTCOME_SUMMARY_VIEW")]
    FLOWOUTCOMESUMMARYVIEW,
    #[serde(rename = "FLOW_OUTCOME_PERFORMANCE_DETAIL_VIEW")]
    FLOWOUTCOMEPERFORMANCEDETAILVIEW,
    #[serde(rename = "FLOW_OUTCOME_PERFORMANCE_INTERVAL_DETAIL_VIEW")]
    FLOWOUTCOMEPERFORMANCEINTERVALDETAILVIEW,
    #[serde(rename = "FLOW_DESTINATION_SUMMARY_VIEW")]
    FLOWDESTINATIONSUMMARYVIEW,
    #[serde(rename = "FLOW_DESTINATION_DETAIL_VIEW")]
    FLOWDESTINATIONDETAILVIEW,
    #[serde(rename = "API_USAGE_VIEW")]
    APIUSAGEVIEW,
    #[serde(rename = "SCHEDULED_CALLBACKS_VIEW")]
    SCHEDULEDCALLBACKSVIEW,
    #[serde(rename = "CONTENT_SEARCH_VIEW")]
    CONTENTSEARCHVIEW,
    #[serde(rename = "LANDING_PAGE")]
    LANDINGPAGE,
    #[serde(rename = "DASHBOARD_SUMMARY")]
    DASHBOARDSUMMARY,
    #[serde(rename = "DASHBOARD_DETAIL")]
    DASHBOARDDETAIL,
    #[serde(rename = "JOURNEY_ACTION_MAP_SUMMARY_VIEW")]
    JOURNEYACTIONMAPSUMMARYVIEW,
    #[serde(rename = "JOURNEY_OUTCOME_SUMMARY_VIEW")]
    JOURNEYOUTCOMESUMMARYVIEW,
    #[serde(rename = "JOURNEY_SEGMENT_SUMMARY_VIEW")]
    JOURNEYSEGMENTSUMMARYVIEW,
    #[serde(rename = "AGENT_DEVELOPMENT_DETAIL_VIEW")]
    AGENTDEVELOPMENTDETAILVIEW,
    #[serde(rename = "AGENT_DEVELOPMENT_DETAIL_ME_VIEW")]
    AGENTDEVELOPMENTDETAILMEVIEW,
    #[serde(rename = "AGENT_DEVELOPMENT_SUMMARY_VIEW")]
    AGENTDEVELOPMENTSUMMARYVIEW,
    #[serde(rename = "AGENT_PERFORMANCE_ME_VIEW")]
    AGENTPERFORMANCEMEVIEW,
    #[serde(rename = "AGENT_STATUS_ME_VIEW")]
    AGENTSTATUSMEVIEW,
    #[serde(rename = "AGENT_EVALUATION_ME_VIEW")]
    AGENTEVALUATIONMEVIEW,
    #[serde(rename = "AGENT_SCORECARD_VIEW")]
    AGENTSCORECARDVIEW,
    #[serde(rename = "AGENT_SCORECARD_ME_VIEW")]
    AGENTSCORECARDMEVIEW,
    #[serde(rename = "AGENT_GAMIFICATION_LEADERSHIP_VIEW")]
    AGENTGAMIFICATIONLEADERSHIPVIEW,
    #[serde(rename = "AGENT_SCHEDULE_ME_VIEW")]
    AGENTSCHEDULEMEVIEW,
    #[serde(rename = "BOT_PERFORMANCE_SUMMARY_VIEW")]
    BOTPERFORMANCESUMMARYVIEW,
    #[serde(rename = "BOT_PERFORMANCE_DETAIL_VIEW")]
    BOTPERFORMANCEDETAILVIEW,
    #[serde(rename = "SCHEDULED_EXPORTS_VIEW")]
    SCHEDULEDEXPORTSVIEW,
    #[serde(rename = "TOPIC_TREND_SUMMARY_VIEW")]
    TOPICTRENDSUMMARYVIEW,
    #[serde(rename = "TOPIC_TREND_DETAIL_VIEW")]
    TOPICTRENDDETAILVIEW,
    #[serde(rename = "ACTION_MAP_BLOCKED_CONSTRAINTS_DETAIL_VIEW")]
    ACTIONMAPBLOCKEDCONSTRAINTSDETAILVIEW,
    #[serde(rename = "ACTION_MAP_BLOCKED_CONSTRAINTS_INTERVAL_DETAIL_VIEW")]
    ACTIONMAPBLOCKEDCONSTRAINTSINTERVALDETAILVIEW,
    #[serde(rename = "FLOW_MILESTONE_PERFORMANCE_DETAIL_VIEW")]
    FLOWMILESTONEPERFORMANCEDETAILVIEW,
    #[serde(rename = "FLOW_MILESTONE_PERFORMANCE_INTERVAL_DETAIL_VIEW")]
    FLOWMILESTONEPERFORMANCEINTERVALDETAILVIEW,
    #[serde(rename = "AGENT_TOPIC_SUMMARY_VIEW")]
    AGENTTOPICSUMMARYVIEW,
    #[serde(rename = "AGENT_TOPIC_DETAIL_VIEW")]
    AGENTTOPICDETAILVIEW,
    #[serde(rename = "QUEUE_TOPIC_SUMMARY_VIEW")]
    QUEUETOPICSUMMARYVIEW,
    #[serde(rename = "QUEUE_TOPIC_DETAIL_VIEW")]
    QUEUETOPICDETAILVIEW,
    #[serde(rename = "FLOW_TOPIC_SUMMARY_VIEW")]
    FLOWTOPICSUMMARYVIEW,
    #[serde(rename = "FLOW_TOPIC_DETAIL_VIEW")]
    FLOWTOPICDETAILVIEW,
    #[serde(rename = "AGENT_INTERACTIONS_ME_VIEW")]
    AGENTINTERACTIONSMEVIEW,
    #[serde(rename = "ALERT_RULES_VIEW")]
    ALERTRULESVIEW,
    #[serde(rename = "CONFIGURE_ALERT_RULE_VIEW")]
    CONFIGUREALERTRULEVIEW,
}

impl Default for ViewType {
    fn default() -> ViewType {
        Self::QUEUEPERFORMANCESUMMARYVIEW
    }
}
/// The user supplied csv delimiter string value either of type 'comma' or 'semicolon' permitted for the export request
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CsvDelimiter {
    #[serde(rename = "SEMICOLON")]
    SEMICOLON,
    #[serde(rename = "COMMA")]
    COMMA,
}

impl Default for CsvDelimiter {
    fn default() -> CsvDelimiter {
        Self::SEMICOLON
    }
}

