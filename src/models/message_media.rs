/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MessageMedia {
    /// The location of the media, useful for retrieving it
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// The optional internet media type of the the media object.  If null then the media type should be dictated by the url
    #[serde(rename = "mediaType", skip_serializing_if = "Option::is_none")]
    pub media_type: Option<String>,
    /// The optional content length of the the media object, in bytes.
    #[serde(rename = "contentLengthBytes", skip_serializing_if = "Option::is_none")]
    pub content_length_bytes: Option<i32>,
    /// The optional name of the the media object.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The optional id of the the media object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
}

impl MessageMedia {
    pub fn new() -> MessageMedia {
        MessageMedia {
            url: None,
            media_type: None,
            content_length_bytes: None,
            name: None,
            id: None,
        }
    }
}


