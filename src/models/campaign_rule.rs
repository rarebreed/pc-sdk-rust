/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CampaignRule {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The name of the CampaignRule.
    #[serde(rename = "name")]
    pub name: String,
    /// Creation time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCreated", skip_serializing_if = "Option::is_none")]
    pub date_created: Option<String>,
    /// Last modified time of the entity. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateModified", skip_serializing_if = "Option::is_none")]
    pub date_modified: Option<String>,
    /// Required for updates, must match the version number of the most recent update
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<i32>,
    #[serde(rename = "campaignRuleEntities")]
    pub campaign_rule_entities: Box<crate::models::CampaignRuleEntities>,
    /// The list of conditions that are evaluated on the entities.
    #[serde(rename = "campaignRuleConditions")]
    pub campaign_rule_conditions: Vec<crate::models::CampaignRuleCondition>,
    /// The list of actions that are executed if the conditions are satisfied.
    #[serde(rename = "campaignRuleActions")]
    pub campaign_rule_actions: Vec<crate::models::CampaignRuleAction>,
    #[serde(rename = "matchAnyConditions", skip_serializing_if = "Option::is_none")]
    pub match_any_conditions: Option<bool>,
    /// Whether or not this CampaignRule is currently enabled. Required on updates.
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl CampaignRule {
    pub fn new(name: String, campaign_rule_entities: crate::models::CampaignRuleEntities, campaign_rule_conditions: Vec<crate::models::CampaignRuleCondition>, campaign_rule_actions: Vec<crate::models::CampaignRuleAction>) -> CampaignRule {
        CampaignRule {
            id: None,
            name,
            date_created: None,
            date_modified: None,
            version: None,
            campaign_rule_entities: Box::new(campaign_rule_entities),
            campaign_rule_conditions,
            campaign_rule_actions,
            match_any_conditions: None,
            enabled: None,
            self_uri: None,
        }
    }
}


