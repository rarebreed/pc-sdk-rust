/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DomainResourceConditionValue {
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::User>>,
    #[serde(rename = "queue", skip_serializing_if = "Option::is_none")]
    pub queue: Option<Box<crate::models::Queue>>,
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
}

impl DomainResourceConditionValue {
    pub fn new() -> DomainResourceConditionValue {
        DomainResourceConditionValue {
            user: None,
            queue: None,
            value: None,
            _type: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "SCALAR")]
    SCALAR,
    #[serde(rename = "VARIABLE")]
    VARIABLE,
    #[serde(rename = "USER")]
    USER,
    #[serde(rename = "QUEUE")]
    QUEUE,
}

impl Default for Type {
    fn default() -> Type {
        Self::SCALAR
    }
}

