/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// FlowRuntimeExecution : Details about the current state of a Flow execution



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FlowRuntimeExecution {
    /// The flow execution ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The flow execution name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "flowVersion")]
    pub flow_version: Box<crate::models::FlowVersion>,
    /// The time the flow was launched. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateLaunched")]
    pub date_launched: String,
    /// The flow's running status, which indicates whether the flow is running normally or completed, etc.
    #[serde(rename = "status")]
    pub status: Status,
    /// The time the flow completed, if applicable. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "dateCompleted", skip_serializing_if = "Option::is_none")]
    pub date_completed: Option<String>,
    /// The completion reason set at the flow completion time, if applicable.
    #[serde(rename = "completionReason", skip_serializing_if = "Option::is_none")]
    pub completion_reason: Option<String>,
    #[serde(rename = "flowErrorInfo", skip_serializing_if = "Option::is_none")]
    pub flow_error_info: Option<Box<crate::models::ErrorBody>>,
    /// List of the flow's output variables, if any. Output variables are only supplied for Completed flows.
    #[serde(rename = "outputData", skip_serializing_if = "Option::is_none")]
    pub output_data: Option<::std::collections::HashMap<String, serde_json::Value>>,
    #[serde(rename = "conversation", skip_serializing_if = "Option::is_none")]
    pub conversation: Option<Box<crate::models::DomainEntityRef>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl FlowRuntimeExecution {
    /// Details about the current state of a Flow execution
    pub fn new(flow_version: crate::models::FlowVersion, date_launched: String, status: Status) -> FlowRuntimeExecution {
        FlowRuntimeExecution {
            id: None,
            name: None,
            flow_version: Box::new(flow_version),
            date_launched,
            status,
            date_completed: None,
            completion_reason: None,
            flow_error_info: None,
            output_data: None,
            conversation: None,
            self_uri: None,
        }
    }
}

/// The flow's running status, which indicates whether the flow is running normally or completed, etc.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "UNKNOWN")]
    UNKNOWN,
    #[serde(rename = "RUNNING")]
    RUNNING,
    #[serde(rename = "ERROR")]
    ERROR,
    #[serde(rename = "TERMINATED")]
    TERMINATED,
    #[serde(rename = "COMPLETED")]
    COMPLETED,
    #[serde(rename = "FAILED")]
    FAILED,
}

impl Default for Status {
    fn default() -> Status {
        Self::UNKNOWN
    }
}

