/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateWebChatMessageRequest {
    /// The message body. Note that message bodies are limited to 4,000 characters.
    #[serde(rename = "body")]
    pub body: String,
    /// The purpose of the message within the conversation, such as a standard text entry versus a greeting.
    #[serde(rename = "bodyType", skip_serializing_if = "Option::is_none")]
    pub body_type: Option<BodyType>,
}

impl CreateWebChatMessageRequest {
    pub fn new(body: String) -> CreateWebChatMessageRequest {
        CreateWebChatMessageRequest {
            body,
            body_type: None,
        }
    }
}

/// The purpose of the message within the conversation, such as a standard text entry versus a greeting.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BodyType {
    #[serde(rename = "standard")]
    Standard,
    #[serde(rename = "notice")]
    Notice,
    #[serde(rename = "member-join")]
    MemberJoin,
    #[serde(rename = "member-leave")]
    MemberLeave,
    #[serde(rename = "media-request")]
    MediaRequest,
}

impl Default for BodyType {
    fn default() -> BodyType {
        Self::Standard
    }
}

