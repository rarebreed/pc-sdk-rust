/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LearningAssignmentAggregateQueryRequestClause {
    /// The logic used to combine the predicates
    #[serde(rename = "type")]
    pub _type: Type,
    /// The list of predicates used to filter the data
    #[serde(rename = "predicates")]
    pub predicates: Vec<crate::models::LearningAssignmentAggregateQueryRequestPredicate>,
}

impl LearningAssignmentAggregateQueryRequestClause {
    pub fn new(_type: Type, predicates: Vec<crate::models::LearningAssignmentAggregateQueryRequestPredicate>) -> LearningAssignmentAggregateQueryRequestClause {
        LearningAssignmentAggregateQueryRequestClause {
            _type,
            predicates,
        }
    }
}

/// The logic used to combine the predicates
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "And")]
    And,
    #[serde(rename = "Or")]
    Or,
}

impl Default for Type {
    fn default() -> Type {
        Self::And
    }
}

