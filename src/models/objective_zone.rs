/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ObjectiveZone {
    /// label
    #[serde(rename = "label")]
    pub label: String,
    /// direction type
    #[serde(rename = "directionType")]
    pub direction_type: DirectionType,
    /// zone type
    #[serde(rename = "zoneType")]
    pub zone_type: ZoneType,
    /// upper limit points
    #[serde(rename = "upperLimitPoints")]
    pub upper_limit_points: i32,
    /// lower limit points
    #[serde(rename = "lowerLimitPoints")]
    pub lower_limit_points: i32,
    /// upper limit value
    #[serde(rename = "upperLimitValue", skip_serializing_if = "Option::is_none")]
    pub upper_limit_value: Option<i32>,
    /// lower limit value
    #[serde(rename = "lowerLimitValue", skip_serializing_if = "Option::is_none")]
    pub lower_limit_value: Option<i32>,
}

impl ObjectiveZone {
    pub fn new(label: String, direction_type: DirectionType, zone_type: ZoneType, upper_limit_points: i32, lower_limit_points: i32) -> ObjectiveZone {
        ObjectiveZone {
            label,
            direction_type,
            zone_type,
            upper_limit_points,
            lower_limit_points,
            upper_limit_value: None,
            lower_limit_value: None,
        }
    }
}

/// direction type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DirectionType {
    #[serde(rename = "Up")]
    Up,
    #[serde(rename = "Down")]
    Down,
    #[serde(rename = "Flat")]
    Flat,
}

impl Default for DirectionType {
    fn default() -> DirectionType {
        Self::Up
    }
}
/// zone type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ZoneType {
    #[serde(rename = "Good")]
    Good,
    #[serde(rename = "Target")]
    Target,
    #[serde(rename = "Great")]
    Great,
    #[serde(rename = "Out")]
    Out,
}

impl Default for ZoneType {
    fn default() -> ZoneType {
        Self::Good
    }
}

