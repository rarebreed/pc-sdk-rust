/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RoutingData {
    /// The identifier of the routing queue
    #[serde(rename = "queueId")]
    pub queue_id: String,
    /// The identifier of a language to be considered in routing
    #[serde(rename = "languageId", skip_serializing_if = "Option::is_none")]
    pub language_id: Option<String>,
    /// The priority for routing
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<i32>,
    /// A list of skill identifiers to be considered in routing
    #[serde(rename = "skillIds", skip_serializing_if = "Option::is_none")]
    pub skill_ids: Option<Vec<String>>,
    /// A list of agents to be preferred in routing
    #[serde(rename = "preferredAgentIds", skip_serializing_if = "Option::is_none")]
    pub preferred_agent_ids: Option<Vec<String>>,
    /// A list of scored agents for routing decisions
    #[serde(rename = "scoredAgents", skip_serializing_if = "Option::is_none")]
    pub scored_agents: Option<Vec<crate::models::ScoredAgent>>,
    /// An array of flags indicating how the conversation should be routed
    #[serde(rename = "routingFlags", skip_serializing_if = "Option::is_none")]
    pub routing_flags: Option<Vec<String>>,
}

impl RoutingData {
    pub fn new(queue_id: String) -> RoutingData {
        RoutingData {
            queue_id,
            language_id: None,
            priority: None,
            skill_ids: None,
            preferred_agent_ids: None,
            scored_agents: None,
            routing_flags: None,
        }
    }
}


