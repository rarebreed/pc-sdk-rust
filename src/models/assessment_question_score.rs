/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AssessmentQuestionScore {
    /// True if this was a failed Kill question
    #[serde(rename = "failedKillQuestion", skip_serializing_if = "Option::is_none")]
    pub failed_kill_question: Option<bool>,
    /// Comments provided for the answer
    #[serde(rename = "comments", skip_serializing_if = "Option::is_none")]
    pub comments: Option<String>,
    /// The ID of the question
    #[serde(rename = "questionId")]
    pub question_id: String,
    /// The ID of the selected answer
    #[serde(rename = "answerId", skip_serializing_if = "Option::is_none")]
    pub answer_id: Option<String>,
    /// The score received for this question
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<i32>,
    /// True if this question was marked as NA
    #[serde(rename = "markedNA", skip_serializing_if = "Option::is_none")]
    pub marked_na: Option<bool>,
    /// Answer for free text answer type
    #[serde(rename = "freeTextAnswer", skip_serializing_if = "Option::is_none")]
    pub free_text_answer: Option<String>,
}

impl AssessmentQuestionScore {
    pub fn new(question_id: String) -> AssessmentQuestionScore {
        AssessmentQuestionScore {
            failed_kill_question: None,
            comments: None,
            question_id,
            answer_id: None,
            score: None,
            marked_na: None,
            free_text_answer: None,
        }
    }
}


