/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AnalyticsSurvey {
    /// Specifies when an event occurred. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "eventTime", skip_serializing_if = "Option::is_none")]
    pub event_time: Option<String>,
    /// The ID of the associated queue
    #[serde(rename = "queueId", skip_serializing_if = "Option::is_none")]
    pub queue_id: Option<String>,
    /// Completion datetime of the survey in ISO 8601 format
    #[serde(rename = "surveyCompletedDate", skip_serializing_if = "Option::is_none")]
    pub survey_completed_date: Option<String>,
    /// Unique identifier for the survey form, regardless of version
    #[serde(rename = "surveyFormContextId", skip_serializing_if = "Option::is_none")]
    pub survey_form_context_id: Option<String>,
    /// ID of the survey form used
    #[serde(rename = "surveyFormId", skip_serializing_if = "Option::is_none")]
    pub survey_form_id: Option<String>,
    /// Name of the survey form used
    #[serde(rename = "surveyFormName", skip_serializing_if = "Option::is_none")]
    pub survey_form_name: Option<String>,
    /// ID of the survey
    #[serde(rename = "surveyId", skip_serializing_if = "Option::is_none")]
    pub survey_id: Option<String>,
    /// Score of the survey used with NPS
    #[serde(rename = "surveyPromoterScore", skip_serializing_if = "Option::is_none")]
    pub survey_promoter_score: Option<i32>,
    /// The status of the survey
    #[serde(rename = "surveyStatus", skip_serializing_if = "Option::is_none")]
    pub survey_status: Option<String>,
    /// ID of the agent the survey was performed against
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    #[serde(rename = "oSurveyTotalScore", skip_serializing_if = "Option::is_none")]
    pub o_survey_total_score: Option<i64>,
}

impl AnalyticsSurvey {
    pub fn new() -> AnalyticsSurvey {
        AnalyticsSurvey {
            event_time: None,
            queue_id: None,
            survey_completed_date: None,
            survey_form_context_id: None,
            survey_form_id: None,
            survey_form_name: None,
            survey_id: None,
            survey_promoter_score: None,
            survey_status: None,
            user_id: None,
            o_survey_total_score: None,
        }
    }
}


