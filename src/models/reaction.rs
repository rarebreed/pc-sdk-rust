/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Reaction {
    /// Parameter for this reaction. For transfer_flow, this would be the outbound flow id.
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<String>,
    /// Name of the parameter for this reaction. For transfer_flow, this would be the outbound flow name.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The reaction to take for a given call analysis result.
    #[serde(rename = "reactionType")]
    pub reaction_type: ReactionType,
}

impl Reaction {
    pub fn new(reaction_type: ReactionType) -> Reaction {
        Reaction {
            data: None,
            name: None,
            reaction_type,
        }
    }
}

/// The reaction to take for a given call analysis result.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReactionType {
    #[serde(rename = "hangup")]
    Hangup,
    #[serde(rename = "transfer")]
    Transfer,
    #[serde(rename = "transfer_flow")]
    TransferFlow,
    #[serde(rename = "play_file")]
    PlayFile,
}

impl Default for ReactionType {
    fn default() -> ReactionType {
        Self::Hangup
    }
}

