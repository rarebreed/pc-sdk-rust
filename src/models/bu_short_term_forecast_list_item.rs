/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BuShortTermForecastListItem {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The start week date of this forecast in yyyy-MM-dd.  Must fall on the start day of week for the associated business unit. Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd
    #[serde(rename = "weekDate", skip_serializing_if = "Option::is_none")]
    pub week_date: Option<String>,
    /// The number of weeks this forecast covers
    #[serde(rename = "weekCount", skip_serializing_if = "Option::is_none")]
    pub week_count: Option<i32>,
    /// The method by which this forecast was created
    #[serde(rename = "creationMethod", skip_serializing_if = "Option::is_none")]
    pub creation_method: Option<CreationMethod>,
    /// The description of this forecast
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Whether this forecast contains modifications on legacy metrics
    #[serde(rename = "legacy", skip_serializing_if = "Option::is_none")]
    pub legacy: Option<bool>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::WfmVersionedEntityMetadata>>,
    /// Whether this forecast can be used for scheduling
    #[serde(rename = "canUseForScheduling", skip_serializing_if = "Option::is_none")]
    pub can_use_for_scheduling: Option<bool>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl BuShortTermForecastListItem {
    pub fn new() -> BuShortTermForecastListItem {
        BuShortTermForecastListItem {
            id: None,
            week_date: None,
            week_count: None,
            creation_method: None,
            description: None,
            legacy: None,
            metadata: None,
            can_use_for_scheduling: None,
            self_uri: None,
        }
    }
}

/// The method by which this forecast was created
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CreationMethod {
    #[serde(rename = "Import")]
    Import,
    #[serde(rename = "ImportedHistoricalWeightedAverage")]
    ImportedHistoricalWeightedAverage,
    #[serde(rename = "HistoricalWeightedAverage")]
    HistoricalWeightedAverage,
    #[serde(rename = "Advanced")]
    Advanced,
}

impl Default for CreationMethod {
    fn default() -> CreationMethod {
        Self::Import
    }
}

