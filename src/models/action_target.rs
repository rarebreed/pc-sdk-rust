/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ActionTarget {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Additional user data associated with the target in key/value format.
    #[serde(rename = "userData", skip_serializing_if = "Option::is_none")]
    pub user_data: Option<Vec<crate::models::KeyValue>>,
    /// Supported media types of the target.
    #[serde(rename = "supportedMediaTypes", skip_serializing_if = "Option::is_none")]
    pub supported_media_types: Option<Vec<SupportedMediaTypes>>,
    /// Indicates the state of the target.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<State>,
    /// Description of the target.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "serviceLevel", skip_serializing_if = "Option::is_none")]
    pub service_level: Option<Box<crate::models::ServiceLevel>>,
    /// Indicates the non-default short abandon threshold
    #[serde(rename = "shortAbandonThreshold", skip_serializing_if = "Option::is_none")]
    pub short_abandon_threshold: Option<i32>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
    /// The date the target was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<String>,
    /// The date the target was last modified. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z
    #[serde(rename = "modifiedDate", skip_serializing_if = "Option::is_none")]
    pub modified_date: Option<String>,
}

impl ActionTarget {
    pub fn new() -> ActionTarget {
        ActionTarget {
            id: None,
            name: None,
            user_data: None,
            supported_media_types: None,
            state: None,
            description: None,
            service_level: None,
            short_abandon_threshold: None,
            self_uri: None,
            created_date: None,
            modified_date: None,
        }
    }
}

/// Supported media types of the target.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SupportedMediaTypes {
    #[serde(rename = "callback")]
    Callback,
    #[serde(rename = "call")]
    Call,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "generic")]
    Generic,
    #[serde(rename = "messaging")]
    Messaging,
    #[serde(rename = "social")]
    Social,
    #[serde(rename = "webchat")]
    Webchat,
}

impl Default for SupportedMediaTypes {
    fn default() -> SupportedMediaTypes {
        Self::Callback
    }
}
/// Indicates the state of the target.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "deleted")]
    Deleted,
}

impl Default for State {
    fn default() -> State {
        Self::Active
    }
}

