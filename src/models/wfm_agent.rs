/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */

/// WfmAgent : Workforce management agent data



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WfmAgent {
    /// The globally unique identifier for the object.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::UserReference>>,
    #[serde(rename = "workPlan", skip_serializing_if = "Option::is_none")]
    pub work_plan: Option<Box<crate::models::WorkPlanReference>>,
    #[serde(rename = "workPlanRotation", skip_serializing_if = "Option::is_none")]
    pub work_plan_rotation: Option<Box<crate::models::WorkPlanRotationReference>>,
    /// Whether the agent accepts direct shift trade requests
    #[serde(rename = "acceptDirectShiftTrades", skip_serializing_if = "Option::is_none")]
    pub accept_direct_shift_trades: Option<bool>,
    /// List of queues to which this agent is capable of handling
    #[serde(rename = "queues", skip_serializing_if = "Option::is_none")]
    pub queues: Option<Vec<crate::models::QueueReference>>,
    /// The list of languages this agent is capable of handling
    #[serde(rename = "languages", skip_serializing_if = "Option::is_none")]
    pub languages: Option<Vec<crate::models::LanguageReference>>,
    /// The list of skills this agent is capable of handling
    #[serde(rename = "skills", skip_serializing_if = "Option::is_none")]
    pub skills: Option<Vec<crate::models::RoutingSkillReference>>,
    /// Whether the agent has the permission to be included in schedule generation
    #[serde(rename = "schedulable", skip_serializing_if = "Option::is_none")]
    pub schedulable: Option<bool>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Box<crate::models::WfmVersionedEntityMetadata>>,
    /// The URI for this object
    #[serde(rename = "selfUri", skip_serializing_if = "Option::is_none")]
    pub self_uri: Option<String>,
}

impl WfmAgent {
    /// Workforce management agent data
    pub fn new() -> WfmAgent {
        WfmAgent {
            id: None,
            user: None,
            work_plan: None,
            work_plan_rotation: None,
            accept_direct_shift_trades: None,
            queues: None,
            languages: None,
            skills: None,
            schedulable: None,
            metadata: None,
            self_uri: None,
        }
    }
}


