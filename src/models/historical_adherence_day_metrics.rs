/*
 * PureCloud Platform API
 *
 * With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.
 *
 * The version of the OpenAPI document: v2
 * Contact: DeveloperEvangelists@genesys.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct HistoricalAdherenceDayMetrics {
    /// Start of day offset in seconds relative to query start time
    #[serde(rename = "dayStartOffsetSecs", skip_serializing_if = "Option::is_none")]
    pub day_start_offset_secs: Option<i32>,
    /// Duration of schedule in seconds included for adherence percentage calculation
    #[serde(rename = "adherenceScheduleSecs", skip_serializing_if = "Option::is_none")]
    pub adherence_schedule_secs: Option<i32>,
    /// Total scheduled duration in seconds for OnQueue activities
    #[serde(rename = "conformanceScheduleSecs", skip_serializing_if = "Option::is_none")]
    pub conformance_schedule_secs: Option<i32>,
    /// Total actually worked duration in seconds for OnQueue activities
    #[serde(rename = "conformanceActualSecs", skip_serializing_if = "Option::is_none")]
    pub conformance_actual_secs: Option<i32>,
    /// Total number of adherence exceptions for this user
    #[serde(rename = "exceptionCount", skip_serializing_if = "Option::is_none")]
    pub exception_count: Option<i32>,
    /// Total duration in seconds of adherence exceptions for this user
    #[serde(rename = "exceptionDurationSecs", skip_serializing_if = "Option::is_none")]
    pub exception_duration_secs: Option<i32>,
    /// The impact duration in seconds of current adherence state for this user
    #[serde(rename = "impactSeconds", skip_serializing_if = "Option::is_none")]
    pub impact_seconds: Option<i32>,
    /// Total duration in seconds for all scheduled activities
    #[serde(rename = "scheduleLengthSecs", skip_serializing_if = "Option::is_none")]
    pub schedule_length_secs: Option<i32>,
    /// Total duration in seconds for all actually worked activities
    #[serde(rename = "actualLengthSecs", skip_serializing_if = "Option::is_none")]
    pub actual_length_secs: Option<i32>,
    /// Total adherence percentage for this user, in the scale of 0 - 100
    #[serde(rename = "adherencePercentage", skip_serializing_if = "Option::is_none")]
    pub adherence_percentage: Option<f64>,
    /// Total conformance percentage for this user, in the scale of 0 - 100. Conformance percentage can be greater than 100 when the actual on queue time is greater than the scheduled on queue time for the same period.
    #[serde(rename = "conformancePercentage", skip_serializing_if = "Option::is_none")]
    pub conformance_percentage: Option<f64>,
}

impl HistoricalAdherenceDayMetrics {
    pub fn new() -> HistoricalAdherenceDayMetrics {
        HistoricalAdherenceDayMetrics {
            day_start_offset_secs: None,
            adherence_schedule_secs: None,
            conformance_schedule_secs: None,
            conformance_actual_secs: None,
            exception_count: None,
            exception_duration_secs: None,
            impact_seconds: None,
            schedule_length_secs: None,
            actual_length_secs: None,
            adherence_percentage: None,
            conformance_percentage: None,
        }
    }
}


